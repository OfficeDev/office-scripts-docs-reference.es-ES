### YamlMime:TSType
name: ExcelScript.RangeAreas
uid: 'ExcelScript!ExcelScript.RangeAreas:interface'
package: ExcelScript!
fullName: ExcelScript.RangeAreas
summary: '`RangeAreas` representa una colección de uno o más intervalos rectangulares en la misma hoja de cálculo.'
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: addConditionalFormat(type)
    uid: 'ExcelScript!ExcelScript.RangeAreas#addConditionalFormat:member(1)'
    package: ExcelScript!
    fullName: addConditionalFormat(type)
    summary: Agrega un nuevo formato condicional a la colección con la prioridad primera o superior.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'addConditionalFormat(type: ConditionalFormatType): ConditionalFormat;'
      parameters:
        - id: type
          description: El tipo de formato condicional que se va a agregar. Vea `ExcelScript.ConditionalFormatType` para más información.
          type: '<xref uid="ExcelScript!ExcelScript.ConditionalFormatType:enum" />'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />'
        description: ''
  - name: calculate()
    uid: 'ExcelScript!ExcelScript.RangeAreas#calculate:member(1)'
    package: ExcelScript!
    fullName: calculate()
    summary: Calcula todas las celdas del `RangeAreas`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'calculate(): void;'
      return:
        type: void
        description: ''
  - name: clear(applyTo)
    uid: 'ExcelScript!ExcelScript.RangeAreas#clear:member(1)'
    package: ExcelScript!
    fullName: clear(applyTo)
    summary: 'Borra valores, formato, relleno, borde y otras propiedades en cada una de las áreas que componen este `RangeAreas` objeto.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clear(applyTo?: ClearApplyTo): void;'
      parameters:
        - id: applyTo
          description: Opcional. Determina el tipo de acción de borrado. Vea `ExcelScript.ClearApplyTo` para más información. El valor predeterminado es "All".
          type: '<xref uid="ExcelScript!ExcelScript.ClearApplyTo:enum" />'
      return:
        type: void
        description: ''
  - name: clearAllConditionalFormats()
    uid: 'ExcelScript!ExcelScript.RangeAreas#clearAllConditionalFormats:member(1)'
    package: ExcelScript!
    fullName: clearAllConditionalFormats()
    summary: Borra todos los formatos condicionales activos en el intervalo actual especificado.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearAllConditionalFormats(): void;'
      return:
        type: void
        description: ''
  - name: convertDataTypeToText()
    uid: 'ExcelScript!ExcelScript.RangeAreas#convertDataTypeToText:member(1)'
    package: ExcelScript!
    fullName: convertDataTypeToText()
    summary: Convierte todas las celdas de los `RangeAreas` tipos de datos with en texto.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'convertDataTypeToText(): void;'
      return:
        type: void
        description: ''
  - name: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    uid: 'ExcelScript!ExcelScript.RangeAreas#copyFrom:member(1)'
    package: ExcelScript!
    fullName: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    summary: Copia los datos de celda o el formato del intervalo de origen `RangeAreas` o al actual `RangeAreas`<!-- -->. El destino `RangeAreas` puede tener un tamaño diferente al intervalo de origen o `RangeAreas`<!-- -->. El destino se expandirá automáticamente si es menor que el origen.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        copyFrom(
                    sourceRange: Range | RangeAreas | string,
                    copyType?: RangeCopyType,
                    skipBlanks?: boolean,
                    transpose?: boolean
                ): void;
      parameters:
        - id: sourceRange
          description: 'Intervalo de origen o `RangeAreas` desde el que se va a copiar. Cuando el origen tiene varios intervalos, su formulario debe poder crearse quitando filas o columnas completas `RangeAreas` de un intervalo rectangular.'
          type: '<xref uid="ExcelScript!ExcelScript.Range:interface" /> | <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" /> | string'
        - id: copyType
          description: Tipo de datos de celda o formato sobre los que copiar. El valor predeterminado es "All".
          type: '<xref uid="ExcelScript!ExcelScript.RangeCopyType:enum" />'
        - id: skipBlanks
          description: True si se omiten celdas en blanco en el intervalo de origen o `RangeAreas`<!-- -->. El valor predeterminado es false.
          type: boolean
        - id: transpose
          description: True si se transponen las celdas en el destino `RangeAreas`<!-- -->. El valor predeterminado es false.
          type: boolean
      return:
        type: void
        description: ''
  - name: getAddress()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getAddress:member(1)'
    package: ExcelScript!
    fullName: getAddress()
    summary: 'Devuelve la `RangeAreas` referencia en estilo A1. El valor de dirección contendrá el nombre de la hoja de cálculo para cada bloque rectangular de celdas (por ejemplo, "Sheet1! A1:B4, Sheet1! D1:D4").'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAddress(): string;'
      return:
        type: string
        description: ''
  - name: getAddressLocal()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getAddressLocal:member(1)'
    package: ExcelScript!
    fullName: getAddressLocal()
    summary: Devuelve la `RangeAreas` referencia en la configuración regional del usuario.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAddressLocal(): string;'
      return:
        type: string
        description: ''
  - name: getAreaCount()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getAreaCount:member(1)'
    package: ExcelScript!
    fullName: getAreaCount()
    summary: Devuelve el número de intervalos rectangulares que componen este `RangeAreas` objeto.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAreaCount(): number;'
      return:
        type: number
        description: ''
  - name: getAreas()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getAreas:member(1)'
    package: ExcelScript!
    fullName: getAreas()
    summary: Devuelve una colección de intervalos rectangulares que componen este `RangeAreas` objeto.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAreas(): Range[];'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />[]'
        description: ''
  - name: getCellCount()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getCellCount:member(1)'
    package: ExcelScript!
    fullName: getCellCount()
    summary: "Devuelve el número de celdas del objeto, sumando los recuentos de celdas de `RangeAreas` todos los intervalos rectangulares individuales. Devuelve -1 si el número de celdas es superior a 2^31-1 (2\_147\_483\_647)."
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCellCount(): number;'
      return:
        type: number
        description: ''
  - name: getConditionalFormat(id)
    uid: 'ExcelScript!ExcelScript.RangeAreas#getConditionalFormat:member(1)'
    package: ExcelScript!
    fullName: getConditionalFormat(id)
    summary: Devuelve un formato condicional para el identificador especificado.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getConditionalFormat(id: string): ConditionalFormat;'
      parameters:
        - id: id
          description: El identificador del formato condicional.
          type: string
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />'
        description: ''
  - name: getConditionalFormats()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getConditionalFormats:member(1)'
    package: ExcelScript!
    fullName: getConditionalFormats()
    summary: Devuelve una colección de formatos condicionales que se cruzan con las celdas de este `RangeAreas` objeto.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getConditionalFormats(): ConditionalFormat[];'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />[]'
        description: ''
  - name: getDataValidation()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getDataValidation:member(1)'
    package: ExcelScript!
    fullName: getDataValidation()
    summary: Devuelve un objeto de validación de datos para todos los intervalos de la `RangeAreas`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getDataValidation(): DataValidation;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.DataValidation:interface" />'
        description: ''
  - name: getEntireColumn()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getEntireColumn:member(1)'
    package: ExcelScript!
    fullName: getEntireColumn()
    summary: 'Devuelve un objeto que representa todas las columnas de la (por ejemplo, si la corriente representa las celdas `RangeAreas` `RangeAreas` `RangeAreas` "B4:E11, H2", devuelve una que representa las columnas `RangeAreas` "B:E, H:H").'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getEntireColumn(): RangeAreas;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />'
        description: ''
  - name: getEntireRow()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getEntireRow:member(1)'
    package: ExcelScript!
    fullName: getEntireRow()
    summary: 'Devuelve un objeto que representa todas las filas de la (por ejemplo, si la corriente representa las celdas "B4:E11", devuelve un que representa las filas `RangeAreas` `RangeAreas` `RangeAreas` `RangeAreas` "4:11").'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getEntireRow(): RangeAreas;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />'
        description: ''
  - name: getFormat()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getFormat:member(1)'
    package: ExcelScript!
    fullName: getFormat()
    summary: 'Devuelve un `RangeFormat` objeto, encapsulando la fuente, el relleno, los bordes, la alineación y otras propiedades de todos los rangos del `RangeAreas` objeto.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFormat(): RangeFormat;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.RangeFormat:interface" />'
        description: ''
  - name: getIntersection(anotherRange)
    uid: 'ExcelScript!ExcelScript.RangeAreas#getIntersection:member(1)'
    package: ExcelScript!
    fullName: getIntersection(anotherRange)
    summary: 'Devuelve el `RangeAreas` objeto que representa la intersección de los intervalos especificados o `RangeAreas`<!-- -->. Si no se encuentra ninguna intersección, esta función devolverá un objeto con su `isNullObject` propiedad establecida en `true`<!-- -->.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getIntersection(anotherRange: Range | RangeAreas | string): RangeAreas;'
      parameters:
        - id: anotherRange
          description: 'Intervalo, `RangeAreas` objeto o dirección que se usará para determinar la intersección.'
          type: '<xref uid="ExcelScript!ExcelScript.Range:interface" /> | <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" /> | string'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />'
        description: ''
  - name: getIsEntireColumn()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getIsEntireColumn:member(1)'
    package: ExcelScript!
    fullName: getIsEntireColumn()
    summary: 'Especifica si todos los intervalos de este objeto representan columnas enteras `RangeAreas` (por ejemplo, "A:C, Q:Z").'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getIsEntireColumn(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getIsEntireRow()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getIsEntireRow:member(1)'
    package: ExcelScript!
    fullName: getIsEntireRow()
    summary: 'Especifica si todos los intervalos de este objeto representan filas completas `RangeAreas` (por ejemplo, "1:3, 5:7").'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getIsEntireRow(): boolean;'
      return:
        type: boolean
        description: ''
  - name: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    uid: 'ExcelScript!ExcelScript.RangeAreas#getOffsetRangeAreas:member(1)'
    package: ExcelScript!
    fullName: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    summary: 'Devuelve un `RangeAreas` objeto que se desplaza por el desplazamiento específico de fila y columna. La dimensión del devuelto `RangeAreas` coincidirá con el objeto original. Si el resultado se fuerza fuera de los límites de la cuadrícula de la hoja de `RangeAreas` cálculo, se producirá un error.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        getOffsetRangeAreas(
                    rowOffset: number,
                    columnOffset: number
                ): RangeAreas;
      parameters:
        - id: rowOffset
          description: 'Número de filas (positivas, negativas o 0) por las que se va `RangeAreas` a desplazar. Los valores positivos desplazan hacia abajo, mientras que los negativos lo hacen hacia arriba.'
          type: number
        - id: columnOffset
          description: 'Número de columnas (positivas, negativas o 0) por las que se va `RangeAreas` a desplazar. Los valores positivos desplazan hacia la derecha, mientras que los negativos lo hacen hacia la izquierda.'
          type: number
      return:
        type: '<xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />'
        description: ''
  - name: getPredefinedCellStyle()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getPredefinedCellStyle:member(1)'
    package: ExcelScript!
    fullName: getPredefinedCellStyle()
    summary: 'Representa el estilo de todos los rangos de este `RangeAreas` objeto. Si los estilos de las celdas son incoherentes, `null` se devolverán. Para los estilos personalizados, se devolverá el nombre del estilo. Para los estilos integrados, se devolverá una cadena que representa un valor `BuiltInStyle` de la enumeración.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPredefinedCellStyle(): string;'
      return:
        type: string
        description: ''
  - name: 'getSpecialCells(cellType, cellValueType)'
    uid: 'ExcelScript!ExcelScript.RangeAreas#getSpecialCells:member(1)'
    package: ExcelScript!
    fullName: 'getSpecialCells(cellType, cellValueType)'
    summary: 'Devuelve un `RangeAreas` objeto que representa todas las celdas que coinciden con el tipo y el valor especificados. Si no se encuentra ninguna celda especial que coincida con los criterios, esta función devolverá un objeto con su `isNullObject` propiedad establecida en `true`<!-- -->.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        getSpecialCells(
                    cellType: SpecialCellType,
                    cellValueType?: SpecialCellValueType
                ): RangeAreas;
      parameters:
        - id: cellType
          description: Tipo de celdas que se incluirán.
          type: '<xref uid="ExcelScript!ExcelScript.SpecialCellType:enum" />'
        - id: cellValueType
          description: 'Si `cellType` es o `constants``formulas`<!-- -->, este argumento se usa para determinar qué tipos de celdas incluir en el resultado. Estos valores se pueden combinar para devolver más de un tipo. El valor predeterminado es seleccionar todas las constantes o fórmulas, sea cual sea el tipo.'
          type: '<xref uid="ExcelScript!ExcelScript.SpecialCellValueType:enum" />'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />'
        description: ''
  - name: getTables(fullyContained)
    uid: 'ExcelScript!ExcelScript.RangeAreas#getTables:member(1)'
    package: ExcelScript!
    fullName: getTables(fullyContained)
    summary: Devuelve una colección de tablas con ámbito que se superponen con cualquier intervalo de este `RangeAreas` objeto.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getTables(fullyContained?: boolean): Table[];'
      parameters:
        - id: fullyContained
          description: 'If `true`<!-- -->, devuelve solo tablas que están totalmente contenidas dentro de los límites del intervalo. El valor predeterminado es `false`<!-- -->.'
          type: boolean
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Table:interface" />[]'
        description: ''
  - name: getUsedRangeAreas(valuesOnly)
    uid: 'ExcelScript!ExcelScript.RangeAreas#getUsedRangeAreas:member(1)'
    package: ExcelScript!
    fullName: getUsedRangeAreas(valuesOnly)
    summary: 'Devuelve el usado `RangeAreas` que comprende todas las áreas usadas de intervalos rectangulares individuales del `RangeAreas` objeto. Si no hay celdas usadas dentro del `RangeAreas`<!-- -->, a continuación, esta función devolverá un objeto con su `isNullObject` propiedad establecida en `true`<!-- -->.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getUsedRangeAreas(valuesOnly?: boolean): RangeAreas;'
      parameters:
        - id: valuesOnly
          description: Si solo se consideran celdas con valores como celdas usadas.
          type: boolean
      return:
        type: '<xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />'
        description: ''
  - name: getWorksheet()
    uid: 'ExcelScript!ExcelScript.RangeAreas#getWorksheet:member(1)'
    package: ExcelScript!
    fullName: getWorksheet()
    summary: Devuelve la hoja de cálculo de la actual `RangeAreas`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getWorksheet(): Worksheet;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Worksheet:interface" />'
        description: ''
  - name: setDirty()
    uid: 'ExcelScript!ExcelScript.RangeAreas#setDirty:member(1)'
    package: ExcelScript!
    fullName: setDirty()
    summary: Establece el `RangeAreas` que se va a volver a calcular cuando se produzca la siguiente actualización.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setDirty(): void;'
      return:
        type: void
        description: ''
  - name: setPredefinedCellStyle(predefinedCellStyle)
    uid: 'ExcelScript!ExcelScript.RangeAreas#setPredefinedCellStyle:member(1)'
    package: ExcelScript!
    fullName: setPredefinedCellStyle(predefinedCellStyle)
    summary: 'Representa el estilo de todos los rangos de este `RangeAreas` objeto. Si los estilos de las celdas son incoherentes, `null` se devolverán. Para los estilos personalizados, se devolverá el nombre del estilo. Para los estilos integrados, se devolverá una cadena que representa un valor `BuiltInStyle` de la enumeración.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPredefinedCellStyle(predefinedCellStyle: string): void;'
      parameters:
        - id: predefinedCellStyle
          description: ''
          type: string
      return:
        type: void
        description: ''