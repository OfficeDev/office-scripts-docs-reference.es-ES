### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.CommentRichContent:interface'
    summary: 'Representa el contenido incluido en un comentario o una respuesta de comentario. Contenido enriquecido incudes la cadena de texto y todos los objetos contenidos en el cuerpo del comentario, como las menciones.'
    name: ExcelScript.CommentRichContent
    fullName: ExcelScript.CommentRichContent
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.CommentRichContent#mentions:member'
      - 'ExcelScript!ExcelScript.CommentRichContent#richContent:member'
  - uid: 'ExcelScript!ExcelScript.CommentRichContent#mentions:member'
    summary: 'Una matriz que contiene todas las entidades (por ejemplo, personas) mencionadas en el comentario.'
    name: mentions
    fullName: mentions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'mentions?: CommentMention[];'
      return:
        type:
          - 'ExcelScript!ExcelScript.CommentRichContent#mentions~0:complex'
  - uid: 'ExcelScript!ExcelScript.CommentRichContent#richContent:member'
    summary: 'Especifica el contenido enriquecido del comentario (por ejemplo, contenido de comentario con menciones, la primera entidad mencionada tiene un atributo ID de 0 y la segunda entidad mencionada tiene un atributo ID de 1).'
    name: richContent
    fullName: richContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'richContent: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```javascript
          /**
           * This sample finds overdue work items in a table and 
           * lets their owners know with a comment that uses an @mention.
           * 
           * This assumes the worksheet has a table with the columns: 
           * "Work Item", "Project", "Owner", "Due Date"
           */
          function main(workbook: ExcelScript.Workbook) {
            let currentSheet = workbook.getActiveWorksheet();

            // Get the "Owner" column range and values.
            let table = currentSheet.getTables()[0];
            let ownerColumnRange = table.getColumn("Owner").getRangeBetweenHeaderAndTotal();
            let ownerColumnValues = ownerColumnRange.getValues();

            // Get the "Due Date" column range and values.
            let dueDateColumnRange = table.getColumn("Due Date").getRangeBetweenHeaderAndTotal();
            let dueDateColumnValues = dueDateColumnRange.getValues();

            // Look for overdue work items.
            for (let row = 0; row < dueDateColumnValues.length; row++) {

              /* Convert the Excel date into a JavaScript date. 
               * This is necessary because Excel and JavaScript store
               * their dates as different numerical values.
               */
              let dueDate = new Date(Math.round((dueDateColumnValues[row][0] - 25569) * 86400 * 1000));

              // Check if the current date is greater than the due date.
              if (Date.now() > dueDate.valueOf()) {

                /* Create a CommentMention object for the comment,
                 * based on the work item's owner.
                 *
                 * A CommentMention's properties are:
                 * `name`: The name of the person being mentioned.
                 * `id`: The index of this mention in the comment.
                 * `email`: The email address of the person being mentioned. 
                 *          In this sample, "Owner: is also the user name for the email.
                 */
                let mention = {
                  name: ownerColumnValues[row][0],
                  id: 0,
                  email: ownerColumnValues[row][0] + "@contoso.com"
                };

                /* Create the comment. 
                 * The `<at id="0">` syntax embeds the mention in the comment text. 
                 * The name is displayed in the comment, 
                 * while an email is sent to the given address.
                 *
                 * The addComment parameters are:
                 * `cellAddress`: The location of the comment.
                 * `content`: The text of the comment and any embedded mentions.
                 * `contentType`: The type of comment ("Mention" or "Plain").
                 */
                currentSheet.addComment(
                  dueDateColumnRange.getCell(row, 0),
                  {
                    richContent: '<at id="0">' + mention.name + "</at> - Your work item is overdue.",
                    mentions: [mention]
                  },
                  ExcelScript.ContentType.mention
                );
              }
            }
          }
          ```
references:
  - uid: 'ExcelScript!ExcelScript.CommentRichContent#mentions~0:complex'
    name: 'CommentMention[]'
    fullName: 'ExcelScript.CommentMention[]'
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.CommentMention:interface'
        name: CommentMention
        fullName: ExcelScript.CommentMention
      - name: '[]'
        fullName: '[]'