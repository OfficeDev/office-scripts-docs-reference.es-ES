### YamlMime:TSType
name: ExcelScript.Shape
uid: ExcelScript!ExcelScript.Shape:interface
package: ExcelScript!
fullName: ExcelScript.Shape
summary: Representa un objeto de forma genérico en la hoja de cálculo. Una forma podría ser una forma geométrica, una línea, un grupo de formas, etc.
remarks: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```TypeScript\n/**\n * This script creates a hexagon shape on the current worksheet.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const hexagon: ExcelScript.Shape = \n    currentSheet.addGeometricShape(ExcelScript.GeometricShapeType.hexagon);\n  \n  // Set the hexagon size to 40x40 pixels.\n  hexagon.setHeight(40);\n  hexagon.setWidth(40);\n\n  // Position the hexagon at [100,100] pixels.\n  hexagon.setLeft(100);\n  hexagon.setTop(100);\n}\n```"
isPreview: false
isDeprecated: false
type: interface
methods:
- name: copyTo(destinationSheet)
  uid: ExcelScript!ExcelScript.Shape#copyTo:member(1)
  package: ExcelScript!
  fullName: copyTo(destinationSheet)
  summary: Copia y pega un `Shape` objeto. La forma pegada se copia en la misma ubicación de píxel que esta forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyTo(destinationSheet?: Worksheet | string): Shape;'
    parameters:
    - id: destinationSheet
      description: Hoja en la que se pegará el objeto de forma. El valor predeterminado es la hoja de cálculo de la forma copiada.
      type: <xref uid="ExcelScript!ExcelScript.Worksheet:interface" /> | string
    return:
      type: <xref uid="ExcelScript!ExcelScript.Shape:interface" />
      description: ''
- name: delete()
  uid: ExcelScript!ExcelScript.Shape#delete:member(1)
  package: ExcelScript!
  fullName: delete()
  summary: Quita la forma de la hoja de cálculo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: getAltTextDescription()
  uid: ExcelScript!ExcelScript.Shape#getAltTextDescription:member(1)
  package: ExcelScript!
  fullName: getAltTextDescription()
  summary: Especifica el texto de descripción alternativo de un `Shape` objeto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAltTextDescription(): string;'
    return:
      type: string
      description: ''
- name: getAltTextTitle()
  uid: ExcelScript!ExcelScript.Shape#getAltTextTitle:member(1)
  package: ExcelScript!
  fullName: getAltTextTitle()
  summary: Especifica el texto de título alternativo de un `Shape` objeto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAltTextTitle(): string;'
    return:
      type: string
      description: ''
- name: getAsImage(format)
  uid: ExcelScript!ExcelScript.Shape#getAsImage:member(1)
  package: ExcelScript!
  fullName: getAsImage(format)
  summary: Convierte la forma a una imagen y devuelve la imagen como una cadena con codificación base 64. El valor de PPP es 96. Los únicos formatos admitidos son `ExcelScript.PictureFormat.BMP`<!-- -->, `ExcelScript.PictureFormat.PNG`<!-- -->, `ExcelScript.PictureFormat.JPEG`<!-- -->Y `ExcelScript.PictureFormat.GIF`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: true
  customDeprecatedMessage: Use `getImageAsBase64` instead.
  syntax:
    content: 'getAsImage(format: PictureFormat): string;'
    parameters:
    - id: format
      description: Especifica el formato de la imagen.
      type: <xref uid="ExcelScript!ExcelScript.PictureFormat:enum" />
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```TypeScript\n/**\n * This script creates a star shape with the value from cell A1.\n * It then returns the image as a base64-encoded string. \n * This string would be used as part of a Power Automate flow to add the image elsewhere.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the value of A1 from the worksheet named Sheet1.\n  const sheet = workbook.getWorksheet(\"Sheet1\");\n  const value = sheet.getRange(\"A1\").getValue();\n\n  // Create a Shape object that looks like a 5-pointed star.\n  const star = sheet.addGeometricShape(ExcelScript.GeometricShapeType.star5);\n\n  // Set the text of star and make sure the shape fits the text.\n  const textFrame = star.getTextFrame();\n  textFrame.getTextRange().setText(value.toString());\n  textFrame.setAutoSizeSetting(ExcelScript.ShapeAutoSize.autoSizeShapeToFitText);\n\n  // Return the shape as a PNG image represented by a base64-encoded string.\n  return star.getAsImage(ExcelScript.PictureFormat.png);\n}\n```"
- name: getConnectionSiteCount()
  uid: ExcelScript!ExcelScript.Shape#getConnectionSiteCount:member(1)
  package: ExcelScript!
  fullName: getConnectionSiteCount()
  summary: Devuelve el número de sitios de conexión en esta forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getConnectionSiteCount(): number;'
    return:
      type: number
      description: ''
- name: getFill()
  uid: ExcelScript!ExcelScript.Shape#getFill:member(1)
  package: ExcelScript!
  fullName: getFill()
  summary: Devuelve el formato de relleno de esta forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFill(): ShapeFill;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ShapeFill:interface" />
      description: ''
- name: getGeometricShape()
  uid: ExcelScript!ExcelScript.Shape#getGeometricShape:member(1)
  package: ExcelScript!
  fullName: getGeometricShape()
  summary: Devuelve la forma geométrica asociada con la forma. Produce un error si el tipo de forma no es "GeometricShape".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getGeometricShape(): GeometricShape;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.GeometricShape:interface" />
      description: ''
- name: getGeometricShapeType()
  uid: ExcelScript!ExcelScript.Shape#getGeometricShapeType:member(1)
  package: ExcelScript!
  fullName: getGeometricShapeType()
  summary: Especifica el tipo de forma geométrica de esta forma geométrica. Vea `ExcelScript.GeometricShapeType` para más información. Devuelve `null` si el tipo de forma no es "GeometricShape".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getGeometricShapeType(): GeometricShapeType;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.GeometricShapeType:enum" />
      description: ''
- name: getGroup()
  uid: ExcelScript!ExcelScript.Shape#getGroup:member(1)
  package: ExcelScript!
  fullName: getGroup()
  summary: Devuelve el grupo de forma asociado con la forma. Produce un error si el tipo de forma no es "GroupShape".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getGroup(): ShapeGroup;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ShapeGroup:interface" />
      description: ''
- name: getHeight()
  uid: ExcelScript!ExcelScript.Shape#getHeight:member(1)
  package: ExcelScript!
  fullName: getHeight()
  summary: Especifica el alto, en puntos, de la forma. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo o cero como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHeight(): number;'
    return:
      type: number
      description: ''
- name: getId()
  uid: ExcelScript!ExcelScript.Shape#getId:member(1)
  package: ExcelScript!
  fullName: getId()
  summary: Especifica el identificador de forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getId(): string;'
    return:
      type: string
      description: ''
- name: getImage()
  uid: ExcelScript!ExcelScript.Shape#getImage:member(1)
  package: ExcelScript!
  fullName: getImage()
  summary: Devuelve la imagen asociada con la forma. Produce un error si el tipo de forma no es "Image".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(): Image;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Image:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```TypeScript\n/**\n * This script transfers an image from one worksheet to another.\n */\nfunction main(workbook: ExcelScript.Workbook)\n{\n  // Get the worksheet with the image on it.\n  let firstWorksheet = workbook.getWorksheet(\"FirstSheet\");\n\n  // Get the first image from the worksheet.\n  // If a script added the image, you could add a name to make it easier to find.\n  let image: ExcelScript.Image;\n  firstWorksheet.getShapes().forEach((shape, index) => {\n    if (shape.getType() === ExcelScript.ShapeType.image) {\n      image = shape.getImage();\n      return;\n    }\n  });\n\n  // Copy the image to another worksheet.\n  image.getShape().copyTo(\"SecondSheet\");\n}\n```"
- name: getImageAsBase64(format)
  uid: ExcelScript!ExcelScript.Shape#getImageAsBase64:member(1)
  package: ExcelScript!
  fullName: getImageAsBase64(format)
  summary: Convierte la forma a una imagen y devuelve la imagen como una cadena con codificación base 64. El valor de PPP es 96. Los únicos formatos admitidos son `ExcelScript.PictureFormat.BMP`<!-- -->, `ExcelScript.PictureFormat.PNG`<!-- -->, `ExcelScript.PictureFormat.JPEG`<!-- -->Y `ExcelScript.PictureFormat.GIF`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImageAsBase64(format: PictureFormat): string;'
    parameters:
    - id: format
      description: Especifica el formato de la imagen.
      type: <xref uid="ExcelScript!ExcelScript.PictureFormat:enum" />
    return:
      type: string
      description: ''
- name: getLeft()
  uid: ExcelScript!ExcelScript.Shape#getLeft:member(1)
  package: ExcelScript!
  fullName: getLeft()
  summary: La distancia, en puntos, desde el lado izquierdo de la forma hasta el lado izquierdo de la hoja de cálculo. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLeft(): number;'
    return:
      type: number
      description: ''
- name: getLevel()
  uid: ExcelScript!ExcelScript.Shape#getLevel:member(1)
  package: ExcelScript!
  fullName: getLevel()
  summary: Especifica el nivel de la forma especificada. Por ejemplo, un nivel de 0 significa que la forma no es parte de ningún grupo, un nivel de 1 significa que la forma es parte de un grupo del nivel superior y un nivel 2 significa que la forma es parte de un grupo secundario del nivel superior.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLevel(): number;'
    return:
      type: number
      description: ''
- name: getLine()
  uid: ExcelScript!ExcelScript.Shape#getLine:member(1)
  package: ExcelScript!
  fullName: getLine()
  summary: Devuelve la línea asociada con la forma. Produce un error si el tipo de forma no es "Line".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLine(): Line;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Line:interface" />
      description: ''
- name: getLineFormat()
  uid: ExcelScript!ExcelScript.Shape#getLineFormat:member(1)
  package: ExcelScript!
  fullName: getLineFormat()
  summary: Devuelve el formato de línea de esta forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLineFormat(): ShapeLineFormat;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ShapeLineFormat:interface" />
      description: ''
- name: getLockAspectRatio()
  uid: ExcelScript!ExcelScript.Shape#getLockAspectRatio:member(1)
  package: ExcelScript!
  fullName: getLockAspectRatio()
  summary: Especifica si la relación de aspecto de esta forma está bloqueada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLockAspectRatio(): boolean;'
    return:
      type: boolean
      description: ''
- name: getName()
  uid: ExcelScript!ExcelScript.Shape#getName:member(1)
  package: ExcelScript!
  fullName: getName()
  summary: Especifica el nombre de la forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getName(): string;'
    return:
      type: string
      description: ''
- name: getParentGroup()
  uid: ExcelScript!ExcelScript.Shape#getParentGroup:member(1)
  package: ExcelScript!
  fullName: getParentGroup()
  summary: Especifica el grupo primario de esta forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getParentGroup(): Shape;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Shape:interface" />
      description: ''
- name: getPlacement()
  uid: ExcelScript!ExcelScript.Shape#getPlacement:member(1)
  package: ExcelScript!
  fullName: getPlacement()
  summary: Representa cómo está asociado el objeto a las celdas inferiores.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPlacement(): Placement;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Placement:enum" />
      description: ''
- name: getRotation()
  uid: ExcelScript!ExcelScript.Shape#getRotation:member(1)
  package: ExcelScript!
  fullName: getRotation()
  summary: Especifica la rotación, en grados, de la forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRotation(): number;'
    return:
      type: number
      description: ''
- name: getTextFrame()
  uid: ExcelScript!ExcelScript.Shape#getTextFrame:member(1)
  package: ExcelScript!
  fullName: getTextFrame()
  summary: Devuelve el objeto de marco de texto de esta forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextFrame(): TextFrame;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.TextFrame:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```TypeScript\n/**\n * This script creates a star shape with the value from cell A1.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the value of A1 from the worksheet named Sheet1.\n  const sheet = workbook.getWorksheet(\"Sheet1\");\n  const value = sheet.getRange(\"A1\").getValue();\n\n  // Create a Shape object that looks like a 5-pointed star.\n  const star = sheet.addGeometricShape(ExcelScript.GeometricShapeType.star5);\n\n  // Set the text of star and make sure the shape fits the text.\n  const textFrame = star.getTextFrame();\n  textFrame.getTextRange().setText(value.toString());\n  textFrame.setAutoSizeSetting(ExcelScript.ShapeAutoSize.autoSizeShapeToFitText);\n}\n```"
- name: getTop()
  uid: ExcelScript!ExcelScript.Shape#getTop:member(1)
  package: ExcelScript!
  fullName: getTop()
  summary: La distancia, en puntos, desde el borde superior de la forma al borde superior de la hoja de cálculo. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTop(): number;'
    return:
      type: number
      description: ''
- name: getType()
  uid: ExcelScript!ExcelScript.Shape#getType:member(1)
  package: ExcelScript!
  fullName: getType()
  summary: Devuelve el tipo de esta forma. Vea `ExcelScript.ShapeType` para más información.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getType(): ShapeType;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ShapeType:enum" />
      description: ''
- name: getVisible()
  uid: ExcelScript!ExcelScript.Shape#getVisible:member(1)
  package: ExcelScript!
  fullName: getVisible()
  summary: Especifica si la forma está visible.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getVisible(): boolean;'
    return:
      type: boolean
      description: ''
- name: getWidth()
  uid: ExcelScript!ExcelScript.Shape#getWidth:member(1)
  package: ExcelScript!
  fullName: getWidth()
  summary: Especifica el ancho, en puntos, de la forma. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo o cero como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWidth(): number;'
    return:
      type: number
      description: ''
- name: getZOrderPosition()
  uid: ExcelScript!ExcelScript.Shape#getZOrderPosition:member(1)
  package: ExcelScript!
  fullName: getZOrderPosition()
  summary: Devuelve la posición de la forma especificada en el orden z, siendo 0 la parte inferior de la pila del orden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getZOrderPosition(): number;'
    return:
      type: number
      description: ''
- name: incrementLeft(increment)
  uid: ExcelScript!ExcelScript.Shape#incrementLeft:member(1)
  package: ExcelScript!
  fullName: incrementLeft(increment)
  summary: Mueve la forma horizontalmente el número de puntos especificado.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementLeft(increment: number): void;'
    parameters:
    - id: increment
      description: 'El incremento, en puntos, la forma se moverá horizontalmente. Un valor positivo mueve la forma a la derecha y un valor negativo la mueve a la izquierda. Si la hoja está orientada de derecha a izquierda, esto se invierte: los valores positivos moverán la forma a la izquierda y los valores negativos la moverán a la derecha.'
      type: number
    return:
      type: void
      description: ''
- name: incrementRotation(increment)
  uid: ExcelScript!ExcelScript.Shape#incrementRotation:member(1)
  package: ExcelScript!
  fullName: incrementRotation(increment)
  summary: Gira la forma en el sentido de las agujas del reloj alrededor del eje Z según el número de grados. Use la `rotation` propiedad para establecer la rotación absoluta de la forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementRotation(increment: number): void;'
    parameters:
    - id: increment
      description: Cuántos grados girará la forma. Un valor positivo gira la forma en el sentido de las agujas del reloj y un valor negativo la gira en sentido contrario a las agujas del reloj.
      type: number
    return:
      type: void
      description: ''
- name: incrementTop(increment)
  uid: ExcelScript!ExcelScript.Shape#incrementTop:member(1)
  package: ExcelScript!
  fullName: incrementTop(increment)
  summary: Mueve la forma verticalmente el número de puntos.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementTop(increment: number): void;'
    parameters:
    - id: increment
      description: El incremento, en puntos, la forma se moverá verticalmente. Un valor positivo mueve la forma hacia abajo y un valor negativo la mueve hacia arriba.
      type: number
    return:
      type: void
      description: ''
- name: scaleHeight(scaleFactor, scaleType, scaleFrom)
  uid: ExcelScript!ExcelScript.Shape#scaleHeight:member(1)
  package: ExcelScript!
  fullName: scaleHeight(scaleFactor, scaleType, scaleFrom)
  summary: Cambia el alto de la forma en un factor especificado. Para imágenes, puede indicar si desea aplicar una escala a la forma respecto al tamaño original o al actual. El tamaño de las formas distintas de imágenes siempre se ajusta en relación con su alto actual.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      scaleHeight(
                  scaleFactor: number,
                  scaleType: ShapeScaleType,
                  scaleFrom?: ShapeScaleFrom
              ): void;
    parameters:
    - id: scaleFactor
      description: Especifica la relación entre el alto de la forma después de cambiar su tamaño y el alto original o actual.
      type: number
    - id: scaleType
      description: Especifica si la forma se escala con respecto a su tamaño original o actual. La opción de escalado de tamaño original solo funciona para imágenes.
      type: <xref uid="ExcelScript!ExcelScript.ShapeScaleType:enum" />
    - id: scaleFrom
      description: Opcional. Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma. Si se omite, representa que la esquina superior izquierda de la forma conserva su posición.
      type: <xref uid="ExcelScript!ExcelScript.ShapeScaleFrom:enum" />
    return:
      type: void
      description: ''
- name: scaleWidth(scaleFactor, scaleType, scaleFrom)
  uid: ExcelScript!ExcelScript.Shape#scaleWidth:member(1)
  package: ExcelScript!
  fullName: scaleWidth(scaleFactor, scaleType, scaleFrom)
  summary: Cambia el ancho de la forma en un factor especificado. Para imágenes, puede indicar si desea aplicar una escala a la forma respecto al tamaño original o al actual. El tamaño de las formas distintas de imágenes siempre se ajusta con relación a su ancho actual.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      scaleWidth(
                  scaleFactor: number,
                  scaleType: ShapeScaleType,
                  scaleFrom?: ShapeScaleFrom
              ): void;
    parameters:
    - id: scaleFactor
      description: Especifica la relación entre el ancho de la forma después de cambiar su tamaño y el ancho original o actual.
      type: number
    - id: scaleType
      description: Especifica si la forma se escala con respecto a su tamaño original o actual. La opción de escalado de tamaño original solo funciona para imágenes.
      type: <xref uid="ExcelScript!ExcelScript.ShapeScaleType:enum" />
    - id: scaleFrom
      description: Opcional. Especifica qué parte de la forma mantiene su posición cuando se ajusta el tamaño de la forma. Si se omite, representa que la esquina superior izquierda de la forma conserva su posición.
      type: <xref uid="ExcelScript!ExcelScript.ShapeScaleFrom:enum" />
    return:
      type: void
      description: ''
- name: setAltTextDescription(altTextDescription)
  uid: ExcelScript!ExcelScript.Shape#setAltTextDescription:member(1)
  package: ExcelScript!
  fullName: setAltTextDescription(altTextDescription)
  summary: Especifica el texto de descripción alternativo de un `Shape` objeto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAltTextDescription(altTextDescription: string): void;'
    parameters:
    - id: altTextDescription
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setAltTextTitle(altTextTitle)
  uid: ExcelScript!ExcelScript.Shape#setAltTextTitle:member(1)
  package: ExcelScript!
  fullName: setAltTextTitle(altTextTitle)
  summary: Especifica el texto de título alternativo de un `Shape` objeto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAltTextTitle(altTextTitle: string): void;'
    parameters:
    - id: altTextTitle
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setGeometricShapeType(geometricShapeType)
  uid: ExcelScript!ExcelScript.Shape#setGeometricShapeType:member(1)
  package: ExcelScript!
  fullName: setGeometricShapeType(geometricShapeType)
  summary: Especifica el tipo de forma geométrica de esta forma geométrica. Vea `ExcelScript.GeometricShapeType` para más información. Devuelve `null` si el tipo de forma no es "GeometricShape".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setGeometricShapeType(geometricShapeType: GeometricShapeType): void;'
    parameters:
    - id: geometricShapeType
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.GeometricShapeType:enum" />
    return:
      type: void
      description: ''
- name: setHeight(height)
  uid: ExcelScript!ExcelScript.Shape#setHeight:member(1)
  package: ExcelScript!
  fullName: setHeight(height)
  summary: Especifica el alto, en puntos, de la forma. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo o cero como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setHeight(height: number): void;'
    parameters:
    - id: height
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setLeft(left)
  uid: ExcelScript!ExcelScript.Shape#setLeft:member(1)
  package: ExcelScript!
  fullName: setLeft(left)
  summary: La distancia, en puntos, desde el lado izquierdo de la forma hasta el lado izquierdo de la hoja de cálculo. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setLeft(left: number): void;'
    parameters:
    - id: left
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setLockAspectRatio(lockAspectRatio)
  uid: ExcelScript!ExcelScript.Shape#setLockAspectRatio:member(1)
  package: ExcelScript!
  fullName: setLockAspectRatio(lockAspectRatio)
  summary: Especifica si la relación de aspecto de esta forma está bloqueada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setLockAspectRatio(lockAspectRatio: boolean): void;'
    parameters:
    - id: lockAspectRatio
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setName(name)
  uid: ExcelScript!ExcelScript.Shape#setName:member(1)
  package: ExcelScript!
  fullName: setName(name)
  summary: Especifica el nombre de la forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setName(name: string): void;'
    parameters:
    - id: name
      description: ''
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```TypeScript\n/**\n * This script creates a triangle shape on the current worksheet and names it \"TRI\".\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const triangle: ExcelScript.Shape = \n    currentSheet.addGeometricShape(ExcelScript.GeometricShapeType.triangle);\n  \n  triangle.setName(\"TRI\");\n}\n```"
- name: setPlacement(placement)
  uid: ExcelScript!ExcelScript.Shape#setPlacement:member(1)
  package: ExcelScript!
  fullName: setPlacement(placement)
  summary: Representa cómo está asociado el objeto a las celdas inferiores.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPlacement(placement: Placement): void;'
    parameters:
    - id: placement
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.Placement:enum" />
    return:
      type: void
      description: ''
- name: setRotation(rotation)
  uid: ExcelScript!ExcelScript.Shape#setRotation:member(1)
  package: ExcelScript!
  fullName: setRotation(rotation)
  summary: Especifica la rotación, en grados, de la forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setRotation(rotation: number): void;'
    parameters:
    - id: rotation
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setTop(top)
  uid: ExcelScript!ExcelScript.Shape#setTop:member(1)
  package: ExcelScript!
  fullName: setTop(top)
  summary: La distancia, en puntos, desde el borde superior de la forma al borde superior de la hoja de cálculo. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setTop(top: number): void;'
    parameters:
    - id: top
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setVisible(visible)
  uid: ExcelScript!ExcelScript.Shape#setVisible:member(1)
  package: ExcelScript!
  fullName: setVisible(visible)
  summary: Especifica si la forma está visible.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setVisible(visible: boolean): void;'
    parameters:
    - id: visible
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setWidth(width)
  uid: ExcelScript!ExcelScript.Shape#setWidth:member(1)
  package: ExcelScript!
  fullName: setWidth(width)
  summary: Especifica el ancho, en puntos, de la forma. Produce una `InvalidArgument` excepción cuando se establece con un valor negativo o cero como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setWidth(width: number): void;'
    parameters:
    - id: width
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setZOrder(position)
  uid: ExcelScript!ExcelScript.Shape#setZOrder:member(1)
  package: ExcelScript!
  fullName: setZOrder(position)
  summary: Mueve la forma especificada hacia arriba o hacia abajo en el orden z de la colección, que se desplaza delante o detrás de otras formas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setZOrder(position: ShapeZOrder): void;'
    parameters:
    - id: position
      description: Dónde mover la forma en la pila de orden Z en relación con las otras formas. Vea `ExcelScript.ShapeZOrder` para más información.
      type: <xref uid="ExcelScript!ExcelScript.ShapeZOrder:enum" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: d356ab4daea59de285b386feb91721336650413a
  ms.sourcegitcommit: bd711a06dd265e3446ede101909916e5d45d7b23
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/09/2022
  ms.locfileid: "68891380"
