### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.DataValidation:interface'
    summary: Representa la validación de datos que se aplica al intervalo actual.
    name: ExcelScript.DataValidation
    fullName: ExcelScript.DataValidation
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.DataValidation#clear:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#getErrorAlert:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#getIgnoreBlanks:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#getInvalidCells:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#getPrompt:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#getRule:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#getType:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#getValid:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#setErrorAlert:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#setIgnoreBlanks:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#setPrompt:member(1)'
      - 'ExcelScript!ExcelScript.DataValidation#setRule:member(1)'
  - uid: 'ExcelScript!ExcelScript.DataValidation#clear:member(1)'
    summary: Borra la validación de datos del rango actual.
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#getErrorAlert:member(1)'
    summary: Mensaje de error cuando el usuario escribe datos no válidos.
    name: getErrorAlert()
    fullName: getErrorAlert()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getErrorAlert(): DataValidationErrorAlert;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DataValidationErrorAlert:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#getIgnoreBlanks:member(1)'
    summary: Especifica si la validación de datos se realizará en celdas en blanco; el valor predeterminado es true.
    name: getIgnoreBlanks()
    fullName: getIgnoreBlanks()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIgnoreBlanks(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#getInvalidCells:member(1)'
    summary: 'Devuelve un objeto RangeAreas, que incluye uno o más intervalos rectangulares, con valores de celda no válidos. Si todos los valores de celda son válidos, esta función devuelve null.'
    name: getInvalidCells()
    fullName: getInvalidCells()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInvalidCells(): RangeAreas;'
      return:
        type:
          - 'ExcelScript!ExcelScript.RangeAreas:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#getPrompt:member(1)'
    summary: Pregunta cuando los usuarios seleccionan una celda.
    name: getPrompt()
    fullName: getPrompt()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrompt(): DataValidationPrompt;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DataValidationPrompt:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#getRule:member(1)'
    summary: Regla de validación de datos que contiene distintos tipos de criterios de validación de datos.
    name: getRule()
    fullName: getRule()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRule(): DataValidationRule;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DataValidationRule:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#getType:member(1)'
    summary: 'Tipo de validación de datos, consulte ExcelScript. DataValidationType para obtener información detallada.'
    name: getType()
    fullName: getType()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getType(): DataValidationType;'
      return:
        type:
          - 'ExcelScript!ExcelScript.DataValidationType:enum'
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#getValid:member(1)'
    summary: Representa si todos los valores de celda son válidos de acuerdo con las reglas de validación de datos. Devuelve true si todos los valores de celda son válidos o false si todos los valores de celda no son válidos. Devuelve NULL si hay valores de celda válidos y no válidos dentro del rango.
    name: getValid()
    fullName: getValid()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getValid(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'ExcelScript!ExcelScript.DataValidation#setErrorAlert:member(1)'
    summary: Mensaje de error cuando el usuario escribe datos no válidos.
    name: setErrorAlert(errorAlert)
    fullName: setErrorAlert(errorAlert)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setErrorAlert(errorAlert: DataValidationErrorAlert): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: errorAlert
          description: ''
          type:
            - 'ExcelScript!ExcelScript.DataValidationErrorAlert:interface'
  - uid: 'ExcelScript!ExcelScript.DataValidation#setIgnoreBlanks:member(1)'
    summary: Especifica si la validación de datos se realizará en celdas en blanco; el valor predeterminado es true.
    name: setIgnoreBlanks(ignoreBlanks)
    fullName: setIgnoreBlanks(ignoreBlanks)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setIgnoreBlanks(ignoreBlanks: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: ignoreBlanks
          description: ''
          type:
            - boolean
  - uid: 'ExcelScript!ExcelScript.DataValidation#setPrompt:member(1)'
    summary: Pregunta cuando los usuarios seleccionan una celda.
    name: setPrompt(prompt)
    fullName: setPrompt(prompt)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrompt(prompt: DataValidationPrompt): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: prompt
          description: ''
          type:
            - 'ExcelScript!ExcelScript.DataValidationPrompt:interface'
  - uid: 'ExcelScript!ExcelScript.DataValidation#setRule:member(1)'
    summary: Regla de validación de datos que contiene distintos tipos de criterios de validación de datos.
    name: setRule(rule)
    fullName: setRule(rule)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setRule(rule: DataValidationRule): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rule
          description: ''
          type:
            - 'ExcelScript!ExcelScript.DataValidationRule:interface'
references:
  - uid: 'ExcelScript!ExcelScript.DataValidationErrorAlert:interface'
    name: DataValidationErrorAlert
    fullName: ExcelScript.DataValidationErrorAlert
  - uid: 'ExcelScript!ExcelScript.RangeAreas:interface'
    name: RangeAreas
    fullName: ExcelScript.RangeAreas
  - uid: 'ExcelScript!ExcelScript.DataValidationPrompt:interface'
    name: DataValidationPrompt
    fullName: ExcelScript.DataValidationPrompt
  - uid: 'ExcelScript!ExcelScript.DataValidationRule:interface'
    name: DataValidationRule
    fullName: ExcelScript.DataValidationRule
  - uid: 'ExcelScript!ExcelScript.DataValidationType:enum'
    name: DataValidationType
    fullName: ExcelScript.DataValidationType