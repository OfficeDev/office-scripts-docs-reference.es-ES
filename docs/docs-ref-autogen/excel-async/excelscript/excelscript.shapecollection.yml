### YamlMime:TSType
name: Excel.ShapeCollection
uid: excel!Excel.ShapeCollection:interface
package: excel!
fullName: Excel.ShapeCollection
summary: Representa una colección de todas las formas de la hoja de cálculo.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: _GetItem(shapeId)
  uid: excel!Excel.ShapeCollection#_GetItem:member(1)
  package: excel!
  fullName: _GetItem(shapeId)
  summary: Devuelve una forma identificada por el identificador de la forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: '_GetItem(shapeId: string): Shape;'
    parameters:
    - id: shapeId
      description: Identificador de la forma.
      type: string
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: ''
- name: addGeometricShape(geometricShapeType)
  uid: excel!Excel.ShapeCollection#addGeometricShape:member(1)
  package: excel!
  fullName: addGeometricShape(geometricShapeType)
  summary: Agrega una forma geométrica a la hoja de cálculo. Devuelve un objeto Shape que representa la nueva forma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      addGeometricShape(
                  geometricShapeType:
                      | GeometricShapeType
                      | "LineInverse"
                      | "Triangle"
                      | "RightTriangle"
                      | "Rectangle"
                      | "Diamond"
                      | "Parallelogram"
                      | "Trapezoid"
                      | "NonIsoscelesTrapezoid"
                      | "Pentagon"
                      | "Hexagon"
                      | "Heptagon"
                      | "Octagon"
                      | "Decagon"
                      | "Dodecagon"
                      | "Star4"
                      | "Star5"
                      | "Star6"
                      | "Star7"
                      | "Star8"
                      | "Star10"
                      | "Star12"
                      | "Star16"
                      | "Star24"
                      | "Star32"
                      | "RoundRectangle"
                      | "Round1Rectangle"
                      | "Round2SameRectangle"
                      | "Round2DiagonalRectangle"
                      | "SnipRoundRectangle"
                      | "Snip1Rectangle"
                      | "Snip2SameRectangle"
                      | "Snip2DiagonalRectangle"
                      | "Plaque"
                      | "Ellipse"
                      | "Teardrop"
                      | "HomePlate"
                      | "Chevron"
                      | "PieWedge"
                      | "Pie"
                      | "BlockArc"
                      | "Donut"
                      | "NoSmoking"
                      | "RightArrow"
                      | "LeftArrow"
                      | "UpArrow"
                      | "DownArrow"
                      | "StripedRightArrow"
                      | "NotchedRightArrow"
                      | "BentUpArrow"
                      | "LeftRightArrow"
                      | "UpDownArrow"
                      | "LeftUpArrow"
                      | "LeftRightUpArrow"
                      | "QuadArrow"
                      | "LeftArrowCallout"
                      | "RightArrowCallout"
                      | "UpArrowCallout"
                      | "DownArrowCallout"
                      | "LeftRightArrowCallout"
                      | "UpDownArrowCallout"
                      | "QuadArrowCallout"
                      | "BentArrow"
                      | "UturnArrow"
                      | "CircularArrow"
                      | "LeftCircularArrow"
                      | "LeftRightCircularArrow"
                      | "CurvedRightArrow"
                      | "CurvedLeftArrow"
                      | "CurvedUpArrow"
                      | "CurvedDownArrow"
                      | "SwooshArrow"
                      | "Cube"
                      | "Can"
                      | "LightningBolt"
                      | "Heart"
                      | "Sun"
                      | "Moon"
                      | "SmileyFace"
                      | "IrregularSeal1"
                      | "IrregularSeal2"
                      | "FoldedCorner"
                      | "Bevel"
                      | "Frame"
                      | "HalfFrame"
                      | "Corner"
                      | "DiagonalStripe"
                      | "Chord"
                      | "Arc"
                      | "LeftBracket"
                      | "RightBracket"
                      | "LeftBrace"
                      | "RightBrace"
                      | "BracketPair"
                      | "BracePair"
                      | "Callout1"
                      | "Callout2"
                      | "Callout3"
                      | "AccentCallout1"
                      | "AccentCallout2"
                      | "AccentCallout3"
                      | "BorderCallout1"
                      | "BorderCallout2"
                      | "BorderCallout3"
                      | "AccentBorderCallout1"
                      | "AccentBorderCallout2"
                      | "AccentBorderCallout3"
                      | "WedgeRectCallout"
                      | "WedgeRRectCallout"
                      | "WedgeEllipseCallout"
                      | "CloudCallout"
                      | "Cloud"
                      | "Ribbon"
                      | "Ribbon2"
                      | "EllipseRibbon"
                      | "EllipseRibbon2"
                      | "LeftRightRibbon"
                      | "VerticalScroll"
                      | "HorizontalScroll"
                      | "Wave"
                      | "DoubleWave"
                      | "Plus"
                      | "FlowChartProcess"
                      | "FlowChartDecision"
                      | "FlowChartInputOutput"
                      | "FlowChartPredefinedProcess"
                      | "FlowChartInternalStorage"
                      | "FlowChartDocument"
                      | "FlowChartMultidocument"
                      | "FlowChartTerminator"
                      | "FlowChartPreparation"
                      | "FlowChartManualInput"
                      | "FlowChartManualOperation"
                      | "FlowChartConnector"
                      | "FlowChartPunchedCard"
                      | "FlowChartPunchedTape"
                      | "FlowChartSummingJunction"
                      | "FlowChartOr"
                      | "FlowChartCollate"
                      | "FlowChartSort"
                      | "FlowChartExtract"
                      | "FlowChartMerge"
                      | "FlowChartOfflineStorage"
                      | "FlowChartOnlineStorage"
                      | "FlowChartMagneticTape"
                      | "FlowChartMagneticDisk"
                      | "FlowChartMagneticDrum"
                      | "FlowChartDisplay"
                      | "FlowChartDelay"
                      | "FlowChartAlternateProcess"
                      | "FlowChartOffpageConnector"
                      | "ActionButtonBlank"
                      | "ActionButtonHome"
                      | "ActionButtonHelp"
                      | "ActionButtonInformation"
                      | "ActionButtonForwardNext"
                      | "ActionButtonBackPrevious"
                      | "ActionButtonEnd"
                      | "ActionButtonBeginning"
                      | "ActionButtonReturn"
                      | "ActionButtonDocument"
                      | "ActionButtonSound"
                      | "ActionButtonMovie"
                      | "Gear6"
                      | "Gear9"
                      | "Funnel"
                      | "MathPlus"
                      | "MathMinus"
                      | "MathMultiply"
                      | "MathDivide"
                      | "MathEqual"
                      | "MathNotEqual"
                      | "CornerTabs"
                      | "SquareTabs"
                      | "PlaqueTabs"
                      | "ChartX"
                      | "ChartStar"
                      | "ChartPlus"
              ): Shape;
    parameters:
    - id: geometricShapeType
      description: Representa el tipo de la forma geométrica. Para obtener más detalles, vea Excel.GeometricShapeType.
      type: "| <xref uid=\"excel!Excel.GeometricShapeType:enum\" />\n                | \"LineInverse\"\n                | \"Triangle\"\n                | \"RightTriangle\"\n                | \"Rectangle\"\n                | \"Diamond\"\n                | \"Parallelogram\"\n                | \"Trapezoid\"\n                | \"NonIsoscelesTrapezoid\"\n                | \"Pentagon\"\n                | \"Hexagon\"\n                | \"Heptagon\"\n                | \"Octagon\"\n                | \"Decagon\"\n                | \"Dodecagon\"\n                | \"Star4\"\n                | \"Star5\"\n                | \"Star6\"\n                | \"Star7\"\n                | \"Star8\"\n                | \"Star10\"\n                | \"Star12\"\n                | \"Star16\"\n                | \"Star24\"\n                | \"Star32\"\n                | \"RoundRectangle\"\n                | \"Round1Rectangle\"\n                | \"Round2SameRectangle\"\n                | \"Round2DiagonalRectangle\"\n                | \"SnipRoundRectangle\"\n                | \"Snip1Rectangle\"\n                | \"Snip2SameRectangle\"\n                | \"Snip2DiagonalRectangle\"\n                | \"Plaque\"\n                | \"Ellipse\"\n                | \"Teardrop\"\n                | \"HomePlate\"\n                | \"Chevron\"\n                | \"PieWedge\"\n                | \"Pie\"\n                | \"BlockArc\"\n                | \"Donut\"\n                | \"NoSmoking\"\n                | \"RightArrow\"\n                | \"LeftArrow\"\n                | \"UpArrow\"\n                | \"DownArrow\"\n                | \"StripedRightArrow\"\n                | \"NotchedRightArrow\"\n                | \"BentUpArrow\"\n                | \"LeftRightArrow\"\n                | \"UpDownArrow\"\n                | \"LeftUpArrow\"\n                | \"LeftRightUpArrow\"\n                | \"QuadArrow\"\n                | \"LeftArrowCallout\"\n                | \"RightArrowCallout\"\n                | \"UpArrowCallout\"\n                | \"DownArrowCallout\"\n                | \"LeftRightArrowCallout\"\n                | \"UpDownArrowCallout\"\n                | \"QuadArrowCallout\"\n                | \"BentArrow\"\n                | \"UturnArrow\"\n                | \"CircularArrow\"\n                | \"LeftCircularArrow\"\n                | \"LeftRightCircularArrow\"\n                | \"CurvedRightArrow\"\n                | \"CurvedLeftArrow\"\n                | \"CurvedUpArrow\"\n                | \"CurvedDownArrow\"\n                | \"SwooshArrow\"\n                | \"Cube\"\n                | \"Can\"\n                | \"LightningBolt\"\n                | \"Heart\"\n                | \"Sun\"\n                | \"Moon\"\n                | \"SmileyFace\"\n                | \"IrregularSeal1\"\n                | \"IrregularSeal2\"\n                | \"FoldedCorner\"\n                | \"Bevel\"\n                | \"Frame\"\n                | \"HalfFrame\"\n                | \"Corner\"\n                | \"DiagonalStripe\"\n                | \"Chord\"\n                | \"Arc\"\n                | \"LeftBracket\"\n                | \"RightBracket\"\n                | \"LeftBrace\"\n                | \"RightBrace\"\n                | \"BracketPair\"\n                | \"BracePair\"\n                | \"Callout1\"\n                | \"Callout2\"\n                | \"Callout3\"\n                | \"AccentCallout1\"\n                | \"AccentCallout2\"\n                | \"AccentCallout3\"\n                | \"BorderCallout1\"\n                | \"BorderCallout2\"\n                | \"BorderCallout3\"\n                | \"AccentBorderCallout1\"\n                | \"AccentBorderCallout2\"\n                | \"AccentBorderCallout3\"\n                | \"WedgeRectCallout\"\n                | \"WedgeRRectCallout\"\n                | \"WedgeEllipseCallout\"\n                | \"CloudCallout\"\n                | \"Cloud\"\n                | \"Ribbon\"\n                | \"Ribbon2\"\n                | \"EllipseRibbon\"\n                | \"EllipseRibbon2\"\n                | \"LeftRightRibbon\"\n                | \"VerticalScroll\"\n                | \"HorizontalScroll\"\n                | \"Wave\"\n                | \"DoubleWave\"\n                | \"Plus\"\n                | \"FlowChartProcess\"\n                | \"FlowChartDecision\"\n                | \"FlowChartInputOutput\"\n                | \"FlowChartPredefinedProcess\"\n                | \"FlowChartInternalStorage\"\n                | \"FlowChartDocument\"\n                | \"FlowChartMultidocument\"\n                | \"FlowChartTerminator\"\n                | \"FlowChartPreparation\"\n                | \"FlowChartManualInput\"\n                | \"FlowChartManualOperation\"\n                | \"FlowChartConnector\"\n                | \"FlowChartPunchedCard\"\n                | \"FlowChartPunchedTape\"\n                | \"FlowChartSummingJunction\"\n                | \"FlowChartOr\"\n                | \"FlowChartCollate\"\n                | \"FlowChartSort\"\n                | \"FlowChartExtract\"\n                | \"FlowChartMerge\"\n                | \"FlowChartOfflineStorage\"\n                | \"FlowChartOnlineStorage\"\n                | \"FlowChartMagneticTape\"\n                | \"FlowChartMagneticDisk\"\n                | \"FlowChartMagneticDrum\"\n                | \"FlowChartDisplay\"\n                | \"FlowChartDelay\"\n                | \"FlowChartAlternateProcess\"\n                | \"FlowChartOffpageConnector\"\n                | \"ActionButtonBlank\"\n                | \"ActionButtonHome\"\n                | \"ActionButtonHelp\"\n                | \"ActionButtonInformation\"\n                | \"ActionButtonForwardNext\"\n                | \"ActionButtonBackPrevious\"\n                | \"ActionButtonEnd\"\n                | \"ActionButtonBeginning\"\n                | \"ActionButtonReturn\"\n                | \"ActionButtonDocument\"\n                | \"ActionButtonSound\"\n                | \"ActionButtonMovie\"\n                | \"Gear6\"\n                | \"Gear9\"\n                | \"Funnel\"\n                | \"MathPlus\"\n                | \"MathMinus\"\n                | \"MathMultiply\"\n                | \"MathDivide\"\n                | \"MathEqual\"\n                | \"MathNotEqual\"\n                | \"CornerTabs\"\n                | \"SquareTabs\"\n                | \"PlaqueTabs\"\n                | \"ChartX\"\n                | \"ChartStar\"\n                | \"ChartPlus\"\n        "
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.hexagon);\n    shape.left = 5;\n    shape.top = 5;\n    shape.height = 175;\n    shape.width = 200;\n    await context.sync();\n}\n```"
- name: addGroup(values)
  uid: excel!Excel.ShapeCollection#addGroup:member(1)
  package: excel!
  fullName: addGroup(values)
  summary: Agrupa un subconjunto de formas en la hoja de cálculo de esta colección. Devuelve un objeto Shape que representa el nuevo grupo de formas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addGroup(values: Array<string | Shape>): Shape;'
    parameters:
    - id: values
      description: Una matriz de objetos Shape ID o Shape.
      type: Array&lt;string | <xref uid="excel!Excel.Shape:interface" />&gt;
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let square = sheet.shapes.getItem(\"Square\");\n    let pentagon = sheet.shapes.getItem(\"Pentagon\");\n    let octagon = sheet.shapes.getItem(\"Octagon\");\n\n    let shapeGroup = sheet.shapes.addGroup([square, pentagon, octagon]);\n    shapeGroup.name = \"Group\";\n    console.log(\"Shapes grouped\");\n\n    await context.sync();\n}\n```"
- name: addImage(base64ImageString)
  uid: excel!Excel.ShapeCollection#addImage:member(1)
  package: excel!
  fullName: addImage(base64ImageString)
  summary: Crea una imagen de una cadena con codificación base64 y la agrega a la hoja de cálculo. Devuelve el objeto Shape que representa la nueva imagen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addImage(base64ImageString: string): Shape;'
    parameters:
    - id: base64ImageString
      description: Una cadena codificada en Base64 que representa una imagen en formato JPEG o PNG.
      type: string
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```javascript\nlet myFile = <HTMLInputElement>document.getElementById(\"selectedFile\");\nlet reader = new FileReader();\n\nreader.onload = (event) => {\n    Excel.run((context) => {\n        let startIndex = reader.result.toString().indexOf(\"base64,\");\n        let mybase64 = reader.result.toString().substr(startIndex + 7);\n        let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n        let image = sheet.shapes.addImage(mybase64);\n        image.name = \"Image\";\n        return context.sync();\n    });\n};\n\n// Read in the image file as a data URL.\nreader.readAsDataURL(myFile.files[0]);\n```"
- name: addLine(startLeft, startTop, endLeft, endTop, connectorType)
  uid: excel!Excel.ShapeCollection#addLine:member(1)
  package: excel!
  fullName: addLine(startLeft, startTop, endLeft, endTop, connectorType)
  summary: Agrega una línea a la hoja de cálculo. Devuelve un objeto Shape que representa la nueva línea.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      addLine(
                  startLeft: number,
                  startTop: number,
                  endLeft: number,
                  endTop: number,
                  connectorType?: ConnectorType | "Straight" | "Elbow" | "Curve"
              ): Shape;
    parameters:
    - id: startLeft
      description: Distancia, en puntos, desde el principio de la línea hasta el lado izquierdo de la hoja de cálculo.
      type: number
    - id: startTop
      description: Distancia, en puntos, desde el principio de la línea hasta la parte superior de la hoja de cálculo.
      type: number
    - id: endLeft
      description: Distancia, en puntos, desde el final de la línea a la izquierda de la hoja de cálculo.
      type: number
    - id: endTop
      description: Distancia, en puntos, desde el final de la línea hasta la parte superior de la hoja de cálculo.
      type: number
    - id: connectorType
      description: Representa el tipo de conector. Consulte Excel. ConnectorType para obtener información detallada.
      type: "<xref uid=\"excel!Excel.ConnectorType:enum\" /> | \"Straight\" | \"Elbow\" | \"Curve\"\n        "
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    let line = shapes.addLine(200, 50, 300, 150, Excel.ConnectorType.straight);\n    line.name = \"StraightLine\";\n    await context.sync();\n}\n```"
- name: addTextBox(text)
  uid: excel!Excel.ShapeCollection#addTextBox:member(1)
  package: excel!
  fullName: addTextBox(text)
  summary: Agrega un cuadro de texto a la hoja de cálculo con el texto proporcionado como contenido. Devuelve un objeto Shape que representa el nuevo cuadro de texto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addTextBox(text?: string): Shape;'
    parameters:
    - id: text
      description: Representa el texto que se mostrará en el cuadro de texto creado.
      type: string
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    let textbox = shapes.addTextBox(\"A box with text\");\n    textbox.left = 100;\n    textbox.top = 100;\n    textbox.height = 20;\n    textbox.width = 175;\n    textbox.name = \"Textbox\";\n    await context.sync();\n}\n```"
- name: getCount()
  uid: excel!Excel.ShapeCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Devuelve el número de formas de la hoja de cálculo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: excel!Excel.ShapeCollection#getItem:member(1)
  package: excel!
  fullName: getItem(key)
  summary: Obtiene una forma mediante su nombre o identificador.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Shape;'
    parameters:
    - id: key
      description: Nombre o identificador de la forma que se va a recuperar.
      type: string
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: ''
- name: getItemAt(index)
  uid: excel!Excel.ShapeCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: Obtiene una forma utilizando su posición en la colección.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Shape;'
    parameters:
    - id: index
      description: Índice de base cero de la forma que se va a recuperar.
      type: number
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.ShapeCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: feed13396317ba80c8a877de79eb7f79a60a2c80
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418579"
