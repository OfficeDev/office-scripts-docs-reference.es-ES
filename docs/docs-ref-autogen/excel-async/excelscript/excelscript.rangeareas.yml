### YamlMime:TSType
name: Excel.RangeAreas
uid: excel!Excel.RangeAreas:interface
package: excel!
fullName: Excel.RangeAreas
summary: RangeAreas representa una colección de uno o más rangos rectangulares en la misma hoja de cálculo. Para obtener información sobre cómo usar los rangos de discontinguous, lea [trabajar con varios intervalos de forma simultánea en los complementos de Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-multiple-ranges)<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: address
  uid: excel!Excel.RangeAreas#address:member
  package: excel!
  fullName: address
  summary: 'Devuelve la referencia RangeAreas en estilo a1. El valor de dirección contendrá el nombre de la hoja de cálculo para cada bloque rectangular de celdas (por ejemplo, "Hoja1! A1: B4, Hoja1! D1: D4 ").'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly address: string;'
    return:
      type: string
- name: addressLocal
  uid: excel!Excel.RangeAreas#addressLocal:member
  package: excel!
  fullName: addressLocal
  summary: Devuelve la referencia RangeAreas en la configuración regional del usuario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type: string
- name: areaCount
  uid: excel!Excel.RangeAreas#areaCount:member
  package: excel!
  fullName: areaCount
  summary: Devuelve el número de intervalos rectangulares que conforman este objeto RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areaCount: number;'
    return:
      type: number
- name: areas
  uid: excel!Excel.RangeAreas#areas:member
  package: excel!
  fullName: areas
  summary: Devuelve una colección de intervalos rectangulares que conforman este objeto RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areas: RangeCollection;'
    return:
      type: <xref uid="excel!Excel.RangeCollection:interface" />
- name: cellCount
  uid: excel!Excel.RangeAreas#cellCount:member
  package: excel!
  fullName: cellCount
  summary: Devuelve el número de celdas en el objeto RangeAreas, sumando los recuentos de celda de todos los rangos individuales rectangulares. Devuelve -1 si el número de celdas es superior a 2^31-1 (2 147 483 647).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type: number
- name: conditionalFormats
  uid: excel!Excel.RangeAreas#conditionalFormats:member
  package: excel!
  fullName: conditionalFormats
  summary: Devuelve una colección de ConditionalFormats que forman una intersección con cualquier celda en este objeto RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly conditionalFormats: ConditionalFormatCollection;'
    return:
      type: <xref uid="excel!Excel.ConditionalFormatCollection:interface" />
- name: dataValidation
  uid: excel!Excel.RangeAreas#dataValidation:member
  package: excel!
  fullName: dataValidation
  summary: Devuelve un objeto dataValidation para todos los rangos del RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataValidation: DataValidation;'
    return:
      type: <xref uid="excel!Excel.DataValidation:interface" />
- name: format
  uid: excel!Excel.RangeAreas#format:member
  package: excel!
  fullName: format
  summary: Devuelve un objeto RangeFormat, encapsulando la fuente, el relleno, los bordes, la alineación y otras propiedades de todos los rangos del objeto RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: RangeFormat;'
    return:
      type: <xref uid="excel!Excel.RangeFormat:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    let usedRange = sheet.getUsedRange();\n\n    // Find the ranges with formulas.\n    let formulaRanges = usedRange.getSpecialCells(\"Formulas\");\n    formulaRanges.format.fill.color = \"lightgreen\";\n\n    await context.sync();\n}\n```"
- name: isEntireColumn
  uid: excel!Excel.RangeAreas#isEntireColumn:member
  package: excel!
  fullName: isEntireColumn
  summary: Especifica si todos los intervalos de este objeto RangeAreas representan columnas completas (por ejemplo, "A:C, Q:Z").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type: boolean
- name: isEntireRow
  uid: excel!Excel.RangeAreas#isEntireRow:member
  package: excel!
  fullName: isEntireRow
  summary: Especifica si todos los intervalos de este objeto RangeAreas representan filas completas (por ejemplo, "1:3, 5:7").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type: boolean
- name: style
  uid: excel!Excel.RangeAreas#style:member
  package: excel!
  fullName: style
  summary: Indica el estilo de todos los intervalos con nombre de este objeto RangeAreas. Si los estilos de las celdas son incoherentes, se devolverá null. Para los estilos personalizados, se devolverá el nombre del estilo. Para los estilos integrados, se devolverá una cadena que representa un valor en la enumeración BuiltInStyle.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: worksheet
  uid: excel!Excel.RangeAreas#worksheet:member
  package: excel!
  fullName: worksheet
  summary: Devuelve la hoja de cálculo de la RangeAreas actual.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: calculate()
  uid: excel!Excel.RangeAreas#calculate:member(1)
  package: excel!
  fullName: calculate()
  summary: Calcula todas las celdas del objeto RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(): void;'
    return:
      type: void
      description: ''
- name: clear(applyTo)
  uid: excel!Excel.RangeAreas#clear:member(1)
  package: excel!
  fullName: clear(applyTo)
  summary: Borra valores, formato, relleno, bordes, etc., en cada una de las áreas que conforman este objeto RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      clear(
                  applyTo?:
                      | ClearApplyTo
                      | "All"
                      | "Formats"
                      | "Contents"
                      | "Hyperlinks"
                      | "RemoveHyperlinks"
              ): void;
    parameters:
    - id: applyTo
      description: Opcional. Determina el tipo de acción de borrado. Consulte Excel. ClearApplyTo para obtener información detallada. El valor predeterminado es "All".
      type: "| <xref uid=\"excel!Excel.ClearApplyTo:enum\" />\n                | \"All\"\n                | \"Formats\"\n                | \"Contents\"\n                | \"Hyperlinks\"\n                | \"RemoveHyperlinks\"\n        "
    return:
      type: void
      description: ''
- name: convertDataTypeToText()
  uid: excel!Excel.RangeAreas#convertDataTypeToText:member(1)
  package: excel!
  fullName: convertDataTypeToText()
  summary: Convierte todas las celdas de la RangeAreas con tipos de datos en texto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type: void
      description: ''
- name: convertToLinkedDataType(serviceID, languageCulture)
  uid: excel!Excel.RangeAreas#convertToLinkedDataType:member(1)
  package: excel!
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  summary: Convierte todas las celdas de la RangeAreas en tipos de datos vinculados.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      convertToLinkedDataType(
                  serviceID: number,
                  languageCulture: string
              ): void;
    parameters:
    - id: serviceID
      description: IDENTIFICADOR del servicio que se usará para consultar los datos.
      type: number
    - id: languageCulture
      description: Referencia cultural del idioma en el que se va a consultar el servicio.
      type: string
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  uid: excel!Excel.RangeAreas#copyFrom:member(1)
  package: excel!
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  summary: Copia el formato o los datos de la celda del intervalo de origen o RangeAreas al objeto RangeAreas actual. El rangeAreas de destino puede tener un tamaño diferente al del rango de origen o RangeAreas. El destino se expandirá automáticamente si es menor que el origen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      copyFrom(
                  sourceRange: Range | RangeAreas | string,
                  copyType?:
                      | RangeCopyType
                      | "All"
                      | "Formulas"
                      | "Values"
                      | "Formats",
                  skipBlanks?: boolean,
                  transpose?: boolean
              ): void;
    parameters:
    - id: sourceRange
      description: El rango de origen o RangeAreas desde el que se va a copiar. Cuando la RangeAreas de origen tiene varios rangos, el formulario debe poder crearse quitando filas o columnas completas de un rango rectangular.
      type: <xref uid="excel!Excel.Range:interface" /> | <xref uid="excel!Excel.RangeAreas:interface" /> | string
    - id: copyType
      description: Tipo de datos de celda o formato que se va a copiar. El valor predeterminado es "All".
      type: >-
        | <xref uid="excel!Excel.RangeCopyType:enum" />
                        | "All"
                        | "Formulas"
                        | "Values"
                        | "Formats"
    - id: skipBlanks
      description: True si se omiten las celdas en blanco en el rango de origen o RangeAreas. El valor predeterminado es false.
      type: boolean
    - id: transpose
      description: True si se van a transponer las celdas en el RangeAreas de destino. El valor predeterminado es false.
      type: boolean
    return:
      type: void
      description: ''
- name: getEntireColumn()
  uid: excel!Excel.RangeAreas#getEntireColumn:member(1)
  package: excel!
  fullName: getEntireColumn()
  summary: Devuelve un objeto RangeAreas que representa toda las columnas de RangeAreas (por ejemplo, si el RangeAreas actual representa las celdas "B4:E11, H2", devuelve un RangeAreas que representa las columnas "B:E, H:H").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireColumn(): RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getEntireRow()
  uid: excel!Excel.RangeAreas#getEntireRow:member(1)
  package: excel!
  fullName: getEntireRow()
  summary: Devuelve un objeto RangeAreas que representa toda las filas de RangeAreas (por ejemplo, si el RangeAreas actual representa las celdas "B4:E11", devuelve un RangeAreas que representa las filas "4:11").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireRow(): RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getIntersection(anotherRange)
  uid: excel!Excel.RangeAreas#getIntersection:member(1)
  package: excel!
  fullName: getIntersection(anotherRange)
  summary: Devuelve el objeto RangeAreas que representa la intersección de los rangos o RangeAreas especificados. Si no se encuentra ninguna intersección, se producirá un error ItemNotFound.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersection(anotherRange: Range | RangeAreas | string): RangeAreas;'
    parameters:
    - id: anotherRange
      description: El intervalo, el objeto RangeAreas o la dirección de intervalo que se utilizará para determinar la intersección.
      type: <xref uid="excel!Excel.Range:interface" /> | <xref uid="excel!Excel.RangeAreas:interface" /> | string
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getIntersectionOrNullObject(anotherRange)
  uid: excel!Excel.RangeAreas#getIntersectionOrNullObject:member(1)
  package: excel!
  fullName: getIntersectionOrNullObject(anotherRange)
  summary: Devuelve el objeto RangeAreas que representa la intersección de los rangos o RangeAreas especificados. Si no se encuentra ninguna intersección, se devuelve un objeto null.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getIntersectionOrNullObject(
                  anotherRange: Range | RangeAreas | string
              ): RangeAreas;
    parameters:
    - id: anotherRange
      description: El rango, RangeAreas o dirección que se utilizará para determinar la intersección.
      type: "<xref uid=\"excel!Excel.Range:interface\" /> | <xref uid=\"excel!Excel.RangeAreas:interface\" /> | string\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getOffsetRangeAreas(rowOffset, columnOffset)
  uid: excel!Excel.RangeAreas#getOffsetRangeAreas:member(1)
  package: excel!
  fullName: getOffsetRangeAreas(rowOffset, columnOffset)
  summary: Devuelve un objeto RangeAreas que se desplaza por el desplazamiento de filas y columnas específico. La dimensión del objeto RangeAreas devuelto coincidirá con el objeto original. Si el RangeAreas resultante se fuerza más allá de los límites de la cuadrícula de la hoja de cálculo, se producirá un error.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getOffsetRangeAreas(
                  rowOffset: number,
                  columnOffset: number
              ): RangeAreas;
    parameters:
    - id: rowOffset
      description: Número de filas (positivo, negativo o 0) que se va a desplazar la RangeAreas. Los valores positivos desplazan hacia abajo, mientras que los negativos lo hacen hacia arriba.
      type: number
    - id: columnOffset
      description: Número de columnas (positivo, negativo o 0) que se va a desplazar la RangeAreas. Los valores positivos desplazan hacia la derecha, mientras que los negativos lo hacen hacia la izquierda.
      type: number
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSpecialCells(cellType, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCells:member(1)
  package: excel!
  fullName: getSpecialCells(cellType, cellValueType)
  summary: Devuelve un objeto RangeAreas que representa todas las celdas que coinciden con el tipo y valor especificados. Si no se encuentra ninguna celda especial que coincida con los criterios se produce un error.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCells(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: Tipo de las celdas que se van a incluir.
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: Si el argumento cellType es constante o fórmulas, este argumento se usa para determinar los tipos de celdas que se van a incluir en el resultado. Estos valores se pueden combinar para que devuelvan más de un tipo. El valor predeterminado es seleccionar todas las constantes o fórmulas, sea cual sea el tipo.
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSpecialCellsOrNullObject(cellType, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCellsOrNullObject:member(1)
  package: excel!
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  summary: Devuelve un objeto RangeAreas que representa todas las celdas que coinciden con el tipo y valor especificados. Devuelve un objeto null si no se encuentra ninguna celda especial que coincida con los criterios.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCellsOrNullObject(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: Tipo de las celdas que se van a incluir.
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: Si el argumento cellType es constante o fórmulas, este argumento se usa para determinar los tipos de celdas que se van a incluir en el resultado. Estos valores se pueden combinar para que devuelvan más de un tipo. El valor predeterminado es seleccionar todas las constantes o fórmulas, sea cual sea el tipo.
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getTables(fullyContained)
  uid: excel!Excel.RangeAreas#getTables:member(1)
  package: excel!
  fullName: getTables(fullyContained)
  summary: Devuelve una colección con ámbito de tablas que se superpone con cualquier rango en este objeto RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTables(fullyContained?: boolean): TableScopedCollection;'
    parameters:
    - id: fullyContained
      description: Si es true, devuelve solo las tablas que están completamente contenidas dentro de los límites del rango. El valor predeterminado es false.
      type: boolean
    return:
      type: <xref uid="excel!Excel.TableScopedCollection:interface" />
      description: ''
- name: getUsedRangeAreas(valuesOnly)
  uid: excel!Excel.RangeAreas#getUsedRangeAreas:member(1)
  package: excel!
  fullName: getUsedRangeAreas(valuesOnly)
  summary: Devuelve el RangeAreas usado que incluye todas las áreas usadas de intervalos rectangulares individuales en el objeto RangeAreas. Si no hay ninguna celda usada dentro de RangeAreas, se producirá el error ItemNotFound.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeAreas(valuesOnly?: boolean): RangeAreas;'
    parameters:
    - id: valuesOnly
      description: Si sólo se deben tener en cuenta las celdas con valores como celdas usadas. El valor predeterminado es false.
      type: boolean
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getUsedRangeAreasOrNullObject(valuesOnly)
  uid: excel!Excel.RangeAreas#getUsedRangeAreasOrNullObject:member(1)
  package: excel!
  fullName: getUsedRangeAreasOrNullObject(valuesOnly)
  summary: Devuelve el RangeAreas usado que incluye todas las áreas usadas de intervalos rectangulares individuales en el objeto RangeAreas. Si no hay ninguna celda usada en la RangeAreas, se devolverá un objeto null.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): RangeAreas;'
    parameters:
    - id: valuesOnly
      description: Si sólo se deben tener en cuenta las celdas con valores como celdas usadas.
      type: boolean
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.RangeAreas#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
- name: setDirty()
  uid: excel!Excel.RangeAreas#setDirty:member(1)
  package: excel!
  fullName: setDirty()
  summary: Establece el RangeAreas que se deberá actualizar cuando se realice la próxima actualización.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDirty(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 18e087e4dbecc5e6c6b1b61849e11737b62ed499
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49413233"
