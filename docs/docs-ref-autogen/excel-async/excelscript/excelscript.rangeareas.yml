### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeAreas:interface'
    summary: 'RangeAreas representa una colección de uno o más rangos rectangulares en la misma hoja de cálculo. Para obtener información sobre cómo usar los rangos de discontinguous, lea [trabajar con varios intervalos de forma simultánea en los complementos de Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-multiple-ranges)<!-- -->.'
    name: Excel.RangeAreas
    fullName: Excel.RangeAreas
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.RangeAreas#address:member'
      - 'excel!Excel.RangeAreas#addressLocal:member'
      - 'excel!Excel.RangeAreas#areaCount:member'
      - 'excel!Excel.RangeAreas#areas:member'
      - 'excel!Excel.RangeAreas#calculate:member(1)'
      - 'excel!Excel.RangeAreas#cellCount:member'
      - 'excel!Excel.RangeAreas#clear:member(1)'
      - 'excel!Excel.RangeAreas#conditionalFormats:member'
      - 'excel!Excel.RangeAreas#convertDataTypeToText:member(1)'
      - 'excel!Excel.RangeAreas#convertToLinkedDataType:member(1)'
      - 'excel!Excel.RangeAreas#copyFrom:member(1)'
      - 'excel!Excel.RangeAreas#dataValidation:member'
      - 'excel!Excel.RangeAreas#format:member'
      - 'excel!Excel.RangeAreas#getEntireColumn:member(1)'
      - 'excel!Excel.RangeAreas#getEntireRow:member(1)'
      - 'excel!Excel.RangeAreas#getIntersection:member(1)'
      - 'excel!Excel.RangeAreas#getIntersectionOrNullObject:member(1)'
      - 'excel!Excel.RangeAreas#getOffsetRangeAreas:member(1)'
      - 'excel!Excel.RangeAreas#getSpecialCells:member(1)'
      - 'excel!Excel.RangeAreas#getSpecialCellsOrNullObject:member(1)'
      - 'excel!Excel.RangeAreas#getTables:member(1)'
      - 'excel!Excel.RangeAreas#getUsedRangeAreas:member(1)'
      - 'excel!Excel.RangeAreas#getUsedRangeAreasOrNullObject:member(1)'
      - 'excel!Excel.RangeAreas#isEntireColumn:member'
      - 'excel!Excel.RangeAreas#isEntireRow:member'
      - 'excel!Excel.RangeAreas#load:member(1)'
      - 'excel!Excel.RangeAreas#setDirty:member(1)'
      - 'excel!Excel.RangeAreas#style:member'
      - 'excel!Excel.RangeAreas#worksheet:member'
  - uid: 'excel!Excel.RangeAreas#address:member'
    summary: 'Devuelve la referencia RangeAreas en estilo a1. El valor de dirección contendrá el nombre de la hoja de cálculo para cada bloque rectangular de celdas (por ejemplo, "Hoja1! A1: B4, Hoja1! D1: D4 ").'
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.RangeAreas#addressLocal:member'
    summary: Devuelve la referencia RangeAreas en la configuración regional del usuario.
    name: addressLocal
    fullName: addressLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly addressLocal: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.RangeAreas#areaCount:member'
    summary: Devuelve el número de intervalos rectangulares que conforman este objeto RangeAreas.
    name: areaCount
    fullName: areaCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areaCount: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeAreas#areas:member'
    summary: Devuelve una colección de intervalos rectangulares que conforman este objeto RangeAreas.
    name: areas
    fullName: areas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areas: RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:interface'
  - uid: 'excel!Excel.RangeAreas#calculate:member(1)'
    summary: Calcula todas las celdas del objeto RangeAreas.
    name: calculate()
    fullName: calculate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.RangeAreas#cellCount:member'
    summary: "Devuelve el número de celdas en el objeto RangeAreas, sumando los recuentos de celda de todos los rangos individuales rectangulares. Devuelve -1 si el número de celdas es superior a 2^31-1 (2\_147\_483\_647)."
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeAreas#clear:member(1)'
    summary: 'Borra valores, formato, relleno, bordes, etc., en cada una de las áreas que conforman este objeto RangeAreas.'
    name: clear(applyTo)
    fullName: clear(applyTo)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        clear(
                    applyTo?:
                        | ClearApplyTo
                        | "All"
                        | "Formats"
                        | "Contents"
                        | "Hyperlinks"
                        | "RemoveHyperlinks"
                ): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyTo
          description: Opcional. Determina el tipo de acción de borrado. Consulte Excel. ClearApplyTo para obtener información detallada. El valor predeterminado es "All".
          type:
            - 'excel!Excel.RangeAreas#clear~0:complex'
  - uid: 'excel!Excel.RangeAreas#conditionalFormats:member'
    summary: Devuelve una colección de ConditionalFormats que forman una intersección con cualquier celda en este objeto RangeAreas.
    name: conditionalFormats
    fullName: conditionalFormats
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly conditionalFormats: ConditionalFormatCollection;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatCollection:interface'
  - uid: 'excel!Excel.RangeAreas#convertDataTypeToText:member(1)'
    summary: Convierte todas las celdas de la RangeAreas con tipos de datos en texto.
    name: convertDataTypeToText()
    fullName: convertDataTypeToText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertDataTypeToText(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.RangeAreas#convertToLinkedDataType:member(1)'
    summary: Convierte todas las celdas de la RangeAreas en tipos de datos vinculados.
    name: 'convertToLinkedDataType(serviceID, languageCulture)'
    fullName: 'convertToLinkedDataType(serviceID, languageCulture)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        convertToLinkedDataType(
                    serviceID: number,
                    languageCulture: string
                ): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: serviceID
          description: IDENTIFICADOR del servicio que se usará para consultar los datos.
          type:
            - number
        - id: languageCulture
          description: Referencia cultural del idioma en el que se va a consultar el servicio.
          type:
            - string
  - uid: 'excel!Excel.RangeAreas#copyFrom:member(1)'
    summary: Copia el formato o los datos de la celda del intervalo de origen o RangeAreas al objeto RangeAreas actual. El rangeAreas de destino puede tener un tamaño diferente al del rango de origen o RangeAreas. El destino se expandirá automáticamente si es menor que el origen.
    name: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    fullName: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        copyFrom(
                    sourceRange: Range | RangeAreas | string,
                    copyType?:
                        | RangeCopyType
                        | "All"
                        | "Formulas"
                        | "Values"
                        | "Formats",
                    skipBlanks?: boolean,
                    transpose?: boolean
                ): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceRange
          description: 'El rango de origen o RangeAreas desde el que se va a copiar. Cuando la RangeAreas de origen tiene varios rangos, el formulario debe poder crearse quitando filas o columnas completas de un rango rectangular.'
          type:
            - 'excel!Excel.RangeAreas#copyFrom~0:complex'
        - id: copyType
          description: Tipo de datos de celda o formato que se va a copiar. El valor predeterminado es "All".
          type:
            - 'excel!Excel.RangeAreas#copyFrom~1:complex'
        - id: skipBlanks
          description: True si se omiten las celdas en blanco en el rango de origen o RangeAreas. El valor predeterminado es false.
          type:
            - boolean
        - id: transpose
          description: True si se van a transponer las celdas en el RangeAreas de destino. El valor predeterminado es false.
          type:
            - boolean
  - uid: 'excel!Excel.RangeAreas#dataValidation:member'
    summary: Devuelve un objeto dataValidation para todos los rangos del RangeAreas.
    name: dataValidation
    fullName: dataValidation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataValidation: DataValidation;'
      return:
        type:
          - 'excel!Excel.DataValidation:interface'
  - uid: 'excel!Excel.RangeAreas#format:member'
    summary: 'Devuelve un objeto RangeFormat, encapsulando la fuente, el relleno, los bordes, la alineación y otras propiedades de todos los rangos del objeto RangeAreas.'
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: RangeFormat;'
      return:
        type:
          - 'excel!Excel.RangeFormat:interface'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          async function main(context: Excel.RequestContext) {

              let sheet = context.workbook.worksheets.getActiveWorksheet();
              let usedRange = sheet.getUsedRange();

              // Find the ranges with formulas.
              let formulaRanges = usedRange.getSpecialCells("Formulas");
              formulaRanges.format.fill.color = "lightgreen";

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.RangeAreas#getEntireColumn:member(1)'
    summary: 'Devuelve un objeto RangeAreas que representa toda las columnas de RangeAreas (por ejemplo, si el RangeAreas actual representa las celdas "B4:E11, H2", devuelve un RangeAreas que representa las columnas "B:E, H:H").'
    name: getEntireColumn()
    fullName: getEntireColumn()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireColumn(): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
  - uid: 'excel!Excel.RangeAreas#getEntireRow:member(1)'
    summary: 'Devuelve un objeto RangeAreas que representa toda las filas de RangeAreas (por ejemplo, si el RangeAreas actual representa las celdas "B4:E11", devuelve un RangeAreas que representa las filas "4:11").'
    name: getEntireRow()
    fullName: getEntireRow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireRow(): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
  - uid: 'excel!Excel.RangeAreas#getIntersection:member(1)'
    summary: 'Devuelve el objeto RangeAreas que representa la intersección de los rangos o RangeAreas especificados. Si no se encuentra ninguna intersección, se producirá un error ItemNotFound.'
    name: getIntersection(anotherRange)
    fullName: getIntersection(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersection(anotherRange: Range | RangeAreas | string): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
      parameters:
        - id: anotherRange
          description: 'El intervalo, el objeto RangeAreas o la dirección de intervalo que se utilizará para determinar la intersección.'
          type:
            - 'excel!Excel.RangeAreas#getIntersection~0:complex'
  - uid: 'excel!Excel.RangeAreas#getIntersectionOrNullObject:member(1)'
    summary: 'Devuelve el objeto RangeAreas que representa la intersección de los rangos o RangeAreas especificados. Si no se encuentra ninguna intersección, se devuelve un objeto null.'
    name: getIntersectionOrNullObject(anotherRange)
    fullName: getIntersectionOrNullObject(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        getIntersectionOrNullObject(
                    anotherRange: Range | RangeAreas | string
                ): RangeAreas;
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
      parameters:
        - id: anotherRange
          description: 'El rango, RangeAreas o dirección que se utilizará para determinar la intersección.'
          type:
            - 'excel!Excel.RangeAreas#getIntersectionOrNullObject~0:complex'
  - uid: 'excel!Excel.RangeAreas#getOffsetRangeAreas:member(1)'
    summary: 'Devuelve un objeto RangeAreas que se desplaza por el desplazamiento de filas y columnas específico. La dimensión del objeto RangeAreas devuelto coincidirá con el objeto original. Si el RangeAreas resultante se fuerza más allá de los límites de la cuadrícula de la hoja de cálculo, se producirá un error.'
    name: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    fullName: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        getOffsetRangeAreas(
                    rowOffset: number,
                    columnOffset: number
                ): RangeAreas;
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
      parameters:
        - id: rowOffset
          description: 'Número de filas (positivo, negativo o 0) que se va a desplazar la RangeAreas. Los valores positivos desplazan hacia abajo, mientras que los negativos lo hacen hacia arriba.'
          type:
            - number
        - id: columnOffset
          description: 'Número de columnas (positivo, negativo o 0) que se va a desplazar la RangeAreas. Los valores positivos desplazan hacia la derecha, mientras que los negativos lo hacen hacia la izquierda.'
          type:
            - number
  - uid: 'excel!Excel.RangeAreas#getSpecialCells:member(1)'
    summary: Devuelve un objeto RangeAreas que representa todas las celdas que coinciden con el tipo y valor especificados. Si no se encuentra ninguna celda especial que coincida con los criterios se produce un error.
    name: 'getSpecialCells(cellType, cellValueType)'
    fullName: 'getSpecialCells(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        getSpecialCells(
                    cellType:
                        | SpecialCellType
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible",
                    cellValueType?:
                        | SpecialCellValueType
                        | "All"
                        | "Errors"
                        | "ErrorsLogical"
                        | "ErrorsNumbers"
                        | "ErrorsText"
                        | "ErrorsLogicalNumber"
                        | "ErrorsLogicalText"
                        | "ErrorsNumberText"
                        | "Logical"
                        | "LogicalNumbers"
                        | "LogicalText"
                        | "LogicalNumbersText"
                        | "Numbers"
                        | "NumbersText"
                        | "Text"
                ): RangeAreas;
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
      parameters:
        - id: cellType
          description: Tipo de las celdas que se van a incluir.
          type:
            - 'excel!Excel.RangeAreas#getSpecialCells~0:complex'
        - id: cellValueType
          description: 'Si el argumento cellType es constante o fórmulas, este argumento se usa para determinar los tipos de celdas que se van a incluir en el resultado. Estos valores se pueden combinar para que devuelvan más de un tipo. El valor predeterminado es seleccionar todas las constantes o fórmulas, sea cual sea el tipo.'
          type:
            - 'excel!Excel.RangeAreas#getSpecialCells~1:complex'
  - uid: 'excel!Excel.RangeAreas#getSpecialCellsOrNullObject:member(1)'
    summary: Devuelve un objeto RangeAreas que representa todas las celdas que coinciden con el tipo y valor especificados. Devuelve un objeto null si no se encuentra ninguna celda especial que coincida con los criterios.
    name: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    fullName: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        getSpecialCellsOrNullObject(
                    cellType:
                        | SpecialCellType
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible",
                    cellValueType?:
                        | SpecialCellValueType
                        | "All"
                        | "Errors"
                        | "ErrorsLogical"
                        | "ErrorsNumbers"
                        | "ErrorsText"
                        | "ErrorsLogicalNumber"
                        | "ErrorsLogicalText"
                        | "ErrorsNumberText"
                        | "Logical"
                        | "LogicalNumbers"
                        | "LogicalText"
                        | "LogicalNumbersText"
                        | "Numbers"
                        | "NumbersText"
                        | "Text"
                ): RangeAreas;
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
      parameters:
        - id: cellType
          description: Tipo de las celdas que se van a incluir.
          type:
            - 'excel!Excel.RangeAreas#getSpecialCellsOrNullObject~0:complex'
        - id: cellValueType
          description: 'Si el argumento cellType es constante o fórmulas, este argumento se usa para determinar los tipos de celdas que se van a incluir en el resultado. Estos valores se pueden combinar para que devuelvan más de un tipo. El valor predeterminado es seleccionar todas las constantes o fórmulas, sea cual sea el tipo.'
          type:
            - 'excel!Excel.RangeAreas#getSpecialCellsOrNullObject~1:complex'
  - uid: 'excel!Excel.RangeAreas#getTables:member(1)'
    summary: Devuelve una colección con ámbito de tablas que se superpone con cualquier rango en este objeto RangeAreas.
    name: getTables(fullyContained)
    fullName: getTables(fullyContained)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTables(fullyContained?: boolean): TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:interface'
        description: ''
      parameters:
        - id: fullyContained
          description: 'Si es true, devuelve solo las tablas que están completamente contenidas dentro de los límites del rango. El valor predeterminado es false.'
          type:
            - boolean
  - uid: 'excel!Excel.RangeAreas#getUsedRangeAreas:member(1)'
    summary: 'Devuelve el RangeAreas usado que incluye todas las áreas usadas de intervalos rectangulares individuales en el objeto RangeAreas. Si no hay ninguna celda usada dentro de RangeAreas, se producirá el error ItemNotFound.'
    name: getUsedRangeAreas(valuesOnly)
    fullName: getUsedRangeAreas(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreas(valuesOnly?: boolean): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
      parameters:
        - id: valuesOnly
          description: Si sólo se deben tener en cuenta las celdas con valores como celdas usadas. El valor predeterminado es false.
          type:
            - boolean
  - uid: 'excel!Excel.RangeAreas#getUsedRangeAreasOrNullObject:member(1)'
    summary: 'Devuelve el RangeAreas usado que incluye todas las áreas usadas de intervalos rectangulares individuales en el objeto RangeAreas. Si no hay ninguna celda usada en la RangeAreas, se devolverá un objeto null.'
    name: getUsedRangeAreasOrNullObject(valuesOnly)
    fullName: getUsedRangeAreasOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
      parameters:
        - id: valuesOnly
          description: Si sólo se deben tener en cuenta las celdas con valores como celdas usadas.
          type:
            - boolean
  - uid: 'excel!Excel.RangeAreas#isEntireColumn:member'
    summary: 'Especifica si todos los intervalos de este objeto RangeAreas representan columnas completas (por ejemplo, "A:C, Q:Z").'
    name: isEntireColumn
    fullName: isEntireColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.RangeAreas#isEntireRow:member'
    summary: 'Especifica si todos los intervalos de este objeto RangeAreas representan filas completas (por ejemplo, "1:3, 5:7").'
    name: isEntireRow
    fullName: isEntireRow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireRow: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.RangeAreas#load:member(1)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeAreas#setDirty:member(1)'
    summary: Establece el RangeAreas que se deberá actualizar cuando se realice la próxima actualización.
    name: setDirty()
    fullName: setDirty()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDirty(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.RangeAreas#style:member'
    summary: 'Indica el estilo de todos los intervalos con nombre de este objeto RangeAreas. Si los estilos de las celdas son incoherentes, se devolverá null. Para los estilos personalizados, se devolverá el nombre del estilo. Para los estilos integrados, se devolverá una cadena que representa un valor en la enumeración BuiltInStyle.'
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.RangeAreas#worksheet:member'
    summary: Devuelve la hoja de cálculo de la RangeAreas actual.
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:interface'
references:
  - uid: 'excel!Excel.RangeCollection:interface'
    name: RangeCollection
    fullName: Excel.RangeCollection
  - uid: 'excel!Excel.RangeAreas#clear~0:complex'
    name: |-
      | ClearApplyTo
                      | "All"
                      | "Formats"
                      | "Contents"
                      | "Hyperlinks"
                      | "RemoveHyperlinks"
    fullName: |-
      | Excel.ClearApplyTo
                      | "All"
                      | "Formats"
                      | "Contents"
                      | "Hyperlinks"
                      | "RemoveHyperlinks"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.ClearApplyTo:enum'
        name: ClearApplyTo
        fullName: Excel.ClearApplyTo
      - name: |2-

                          | "All"
                          | "Formats"
                          | "Contents"
                          | "Hyperlinks"
                          | "RemoveHyperlinks"
                  
        fullName: |2-

                          | "All"
                          | "Formats"
                          | "Contents"
                          | "Hyperlinks"
                          | "RemoveHyperlinks"
                  
  - uid: 'excel!Excel.ConditionalFormatCollection:interface'
    name: ConditionalFormatCollection
    fullName: Excel.ConditionalFormatCollection
  - uid: 'excel!Excel.RangeAreas#copyFrom~0:complex'
    name: Range | RangeAreas | string
    fullName: Excel.Range | Excel.RangeAreas | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!Excel.RangeAreas:interface'
        name: RangeAreas
        fullName: Excel.RangeAreas
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RangeAreas#copyFrom~1:complex'
    name: |-
      | RangeCopyType
                      | "All"
                      | "Formulas"
                      | "Values"
                      | "Formats"
    fullName: |-
      | Excel.RangeCopyType
                      | "All"
                      | "Formulas"
                      | "Values"
                      | "Formats"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.RangeCopyType:enum'
        name: RangeCopyType
        fullName: Excel.RangeCopyType
      - name: |2-

                          | "All"
                          | "Formulas"
                          | "Values"
                          | "Formats"
        fullName: |2-

                          | "All"
                          | "Formulas"
                          | "Values"
                          | "Formats"
  - uid: 'excel!Excel.DataValidation:interface'
    name: DataValidation
    fullName: Excel.DataValidation
  - uid: 'excel!Excel.RangeFormat:interface'
    name: RangeFormat
    fullName: Excel.RangeFormat
  - uid: 'excel!Excel.RangeAreas:interface'
    name: RangeAreas
    fullName: Excel.RangeAreas
  - uid: 'excel!Excel.RangeAreas#getIntersection~0:complex'
    name: Range | RangeAreas | string
    fullName: Excel.Range | Excel.RangeAreas | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!Excel.RangeAreas:interface'
        name: RangeAreas
        fullName: Excel.RangeAreas
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RangeAreas#getIntersectionOrNullObject~0:complex'
    name: Range | RangeAreas | string
    fullName: Excel.Range | Excel.RangeAreas | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!Excel.RangeAreas:interface'
        name: RangeAreas
        fullName: Excel.RangeAreas
      - name: |2-
           | string
                  
        fullName: |2-
           | string
                  
  - uid: 'excel!Excel.RangeAreas#getSpecialCells~0:complex'
    name: |-
      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible"
    fullName: |-
      | Excel.SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.SpecialCellType:enum'
        name: SpecialCellType
        fullName: Excel.SpecialCellType
      - name: |2-

                          | "ConditionalFormats"
                          | "DataValidations"
                          | "Blanks"
                          | "Constants"
                          | "Formulas"
                          | "SameConditionalFormat"
                          | "SameDataValidation"
                          | "Visible"
        fullName: |2-

                          | "ConditionalFormats"
                          | "DataValidations"
                          | "Blanks"
                          | "Constants"
                          | "Formulas"
                          | "SameConditionalFormat"
                          | "SameDataValidation"
                          | "Visible"
  - uid: 'excel!Excel.RangeAreas#getSpecialCells~1:complex'
    name: |-
      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
    fullName: |-
      | Excel.SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.SpecialCellValueType:enum'
        name: SpecialCellValueType
        fullName: Excel.SpecialCellValueType
      - name: |2-

                          | "All"
                          | "Errors"
                          | "ErrorsLogical"
                          | "ErrorsNumbers"
                          | "ErrorsText"
                          | "ErrorsLogicalNumber"
                          | "ErrorsLogicalText"
                          | "ErrorsNumberText"
                          | "Logical"
                          | "LogicalNumbers"
                          | "LogicalText"
                          | "LogicalNumbersText"
                          | "Numbers"
                          | "NumbersText"
                          | "Text"
                  
        fullName: |2-

                          | "All"
                          | "Errors"
                          | "ErrorsLogical"
                          | "ErrorsNumbers"
                          | "ErrorsText"
                          | "ErrorsLogicalNumber"
                          | "ErrorsLogicalText"
                          | "ErrorsNumberText"
                          | "Logical"
                          | "LogicalNumbers"
                          | "LogicalText"
                          | "LogicalNumbersText"
                          | "Numbers"
                          | "NumbersText"
                          | "Text"
                  
  - uid: 'excel!Excel.RangeAreas#getSpecialCellsOrNullObject~0:complex'
    name: |-
      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible"
    fullName: |-
      | Excel.SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.SpecialCellType:enum'
        name: SpecialCellType
        fullName: Excel.SpecialCellType
      - name: |2-

                          | "ConditionalFormats"
                          | "DataValidations"
                          | "Blanks"
                          | "Constants"
                          | "Formulas"
                          | "SameConditionalFormat"
                          | "SameDataValidation"
                          | "Visible"
        fullName: |2-

                          | "ConditionalFormats"
                          | "DataValidations"
                          | "Blanks"
                          | "Constants"
                          | "Formulas"
                          | "SameConditionalFormat"
                          | "SameDataValidation"
                          | "Visible"
  - uid: 'excel!Excel.RangeAreas#getSpecialCellsOrNullObject~1:complex'
    name: |-
      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
    fullName: |-
      | Excel.SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.SpecialCellValueType:enum'
        name: SpecialCellValueType
        fullName: Excel.SpecialCellValueType
      - name: |2-

                          | "All"
                          | "Errors"
                          | "ErrorsLogical"
                          | "ErrorsNumbers"
                          | "ErrorsText"
                          | "ErrorsLogicalNumber"
                          | "ErrorsLogicalText"
                          | "ErrorsNumberText"
                          | "Logical"
                          | "LogicalNumbers"
                          | "LogicalText"
                          | "LogicalNumbersText"
                          | "Numbers"
                          | "NumbersText"
                          | "Text"
                  
        fullName: |2-

                          | "All"
                          | "Errors"
                          | "ErrorsLogical"
                          | "ErrorsNumbers"
                          | "ErrorsText"
                          | "ErrorsLogicalNumber"
                          | "ErrorsLogicalText"
                          | "ErrorsNumberText"
                          | "Logical"
                          | "LogicalNumbers"
                          | "LogicalText"
                          | "LogicalNumbersText"
                          | "Numbers"
                          | "NumbersText"
                          | "Text"
                  
  - uid: 'excel!Excel.TableScopedCollection:interface'
    name: TableScopedCollection
    fullName: Excel.TableScopedCollection
  - uid: 'excel!Excel.Worksheet:interface'
    name: Worksheet
    fullName: Excel.Worksheet