### YamlMime:TSType
name: Excel.CustomXmlPartCollection
uid: excel!Excel.CustomXmlPartCollection:interface
package: excel!
fullName: Excel.CustomXmlPartCollection
summary: Una colección de elementos XML personalizados.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: add(xml)
  uid: excel!Excel.CustomXmlPartCollection#add:member(1)
  package: excel!
  fullName: add(xml)
  summary: Se agrega un nuevo elemento XML personalizado al libro.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(xml: string): CustomXmlPart;'
    parameters:
    - id: xml
      description: Contenido XML. Debe ser un fragmento XML válido.
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    // You must have the xmlns attribute to populate the \n    // CustomXml.namespaceUri property.\n    let originalXml = \"<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>Juan</Reviewer><Reviewer>Hong</Reviewer><Reviewer>Sally</Reviewer></Reviewers>\";\n    let customXmlPart = context.workbook.customXmlParts.add(originalXml);\n    customXmlPart.load(\"id\");\n    let xmlBlob = customXmlPart.getXml();\n\n    await context.sync();\n\n    let readableXml = addLineBreaksToXML(xmlBlob.value);\n    $(\"#display-xml\").text(readableXml);\n\n    // Store the XML part's ID in a setting.\n    let settings = context.workbook.settings;\n    settings.add(\"ContosoReviewXmlPartId\", customXmlPart.id);\n\n    await context.sync();\n}\n```"
- name: getByNamespace(namespaceUri)
  uid: excel!Excel.CustomXmlPartCollection#getByNamespace:member(1)
  package: excel!
  fullName: getByNamespace(namespaceUri)
  summary: Obtiene una nueva colección con ámbito de elementos XML personalizados cuyos espacios de nombres coinciden con el espacio de nombres determinado.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getByNamespace(namespaceUri: string): CustomXmlPartScopedCollection;'
    parameters:
    - id: namespaceUri
      description: Debe ser un URI de esquema completo; por ejemplo, " http://schemas.contoso.com/review/1.0 ".
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPartScopedCollection:interface" />
      description: ''
- name: getCount()
  uid: excel!Excel.CustomXmlPartCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Obtiene el número de elementos CustomXml de la colección.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(id)
  uid: excel!Excel.CustomXmlPartCollection#getItem:member(1)
  package: excel!
  fullName: getItem(id)
  summary: Obtiene un elemento XML personalizado a partir de su identificador.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(id: string): CustomXmlPart;'
    parameters:
    - id: id
      description: IDENTIFICADOR del objeto que se va a recuperar.
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: ''
- name: getItemOrNullObject(id)
  uid: excel!Excel.CustomXmlPartCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(id)
  summary: Obtiene un elemento XML personalizado a partir de su identificador. Si el objeto CustomXmlPart no existe, la propiedad isNull del objeto devuelto será true.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): CustomXmlPart;'
    parameters:
    - id: id
      description: IDENTIFICADOR del objeto que se va a recuperar.
      type: string
    return:
      type: <xref uid="excel!Excel.CustomXmlPart:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CustomXmlPartCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 4f760ed0ebe75334c8367395afe651424c34f644
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49416340"
