### YamlMime:TSType
name: Excel.IconSetConditionalFormat
uid: excel!Excel.IconSetConditionalFormat:interface
package: excel!
fullName: Excel.IconSetConditionalFormat
summary: Representa un criterio IconSet para el formato condicional.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: criteria
  uid: excel!Excel.IconSetConditionalFormat#criteria:member
  package: excel!
  fullName: criteria
  summary: Una matriz de criterios y IconSets para las reglas y los posibles iconos personalizados para los iconos condicionales. Tenga en cuenta que para el primer criterio solo se puede modificar el icono personalizado, mientras que el tipo, la fórmula y el operador se omitirán cuando se establezca.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'criteria: ConditionalIconCriterion[];'
    return:
      type: <xref uid="excel!Excel.ConditionalIconCriterion:interface" />[]
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B8:E13\");\n    let conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    let iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n}\n```"
- name: reverseIconOrder
  uid: excel!Excel.IconSetConditionalFormat#reverseIconOrder:member
  package: excel!
  fullName: reverseIconOrder
  summary: Si es true, invierte el orden de los iconos del IconSet. Tenga en cuenta que no se puede establecer si se usan iconos personalizados.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'reverseIconOrder: boolean;'
    return:
      type: boolean
- name: showIconOnly
  uid: excel!Excel.IconSetConditionalFormat#showIconOnly:member
  package: excel!
  fullName: showIconOnly
  summary: Si es true, oculta los valores y solo muestra los iconos.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showIconOnly: boolean;'
    return:
      type: boolean
- name: style
  uid: excel!Excel.IconSetConditionalFormat#style:member
  package: excel!
  fullName: style
  summary: Si se establece, muestra la opción IconSet del formato condicional.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      style:
                  | IconSet
                  | "Invalid"
                  | "ThreeArrows"
                  | "ThreeArrowsGray"
                  | "ThreeFlags"
                  | "ThreeTrafficLights1"
                  | "ThreeTrafficLights2"
                  | "ThreeSigns"
                  | "ThreeSymbols"
                  | "ThreeSymbols2"
                  | "FourArrows"
                  | "FourArrowsGray"
                  | "FourRedToBlack"
                  | "FourRating"
                  | "FourTrafficLights"
                  | "FiveArrows"
                  | "FiveArrowsGray"
                  | "FiveRating"
                  | "FiveQuarters"
                  | "ThreeStars"
                  | "ThreeTriangles"
                  | "FiveBoxes";
    return:
      type: >-
        | <xref uid="excel!Excel.IconSet:enum" />
                    | "Invalid"
                    | "ThreeArrows"
                    | "ThreeArrowsGray"
                    | "ThreeFlags"
                    | "ThreeTrafficLights1"
                    | "ThreeTrafficLights2"
                    | "ThreeSigns"
                    | "ThreeSymbols"
                    | "ThreeSymbols2"
                    | "FourArrows"
                    | "FourArrowsGray"
                    | "FourRedToBlack"
                    | "FourRating"
                    | "FourTrafficLights"
                    | "FiveArrows"
                    | "FiveArrowsGray"
                    | "FiveRating"
                    | "FiveQuarters"
                    | "ThreeStars"
                    | "ThreeTriangles"
                    | "FiveBoxes"
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B8:E13\");\n    let conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    let iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n}\n```"
methods:
- name: load(propertyNames)
  uid: excel!Excel.IconSetConditionalFormat#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 53aece057dc71a479d02ce323f6cba2a6b5eba76
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49419351"
