### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.IconSetConditionalFormat:interface'
    summary: Representa un criterio IconSet para el formato condicional.
    name: Excel.IconSetConditionalFormat
    fullName: Excel.IconSetConditionalFormat
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.IconSetConditionalFormat#criteria:member'
      - 'excel!Excel.IconSetConditionalFormat#load:member(1)'
      - 'excel!Excel.IconSetConditionalFormat#reverseIconOrder:member'
      - 'excel!Excel.IconSetConditionalFormat#showIconOnly:member'
      - 'excel!Excel.IconSetConditionalFormat#style:member'
  - uid: 'excel!Excel.IconSetConditionalFormat#criteria:member'
    summary: 'Una matriz de criterios y IconSets para las reglas y los posibles iconos personalizados para los iconos condicionales. Tenga en cuenta que para el primer criterio solo se puede modificar el icono personalizado, mientras que el tipo, la fórmula y el operador se omitirán cuando se establezca.'
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: ConditionalIconCriterion[];'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat#criteria~0:complex'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B8:E13");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              let iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.IconSetConditionalFormat#load:member(1)'
    summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar `context.sync()` antes de leer las propiedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.IconSetConditionalFormat#reverseIconOrder:member'
    summary: 'Si es true, invierte el orden de los iconos del IconSet. Tenga en cuenta que no se puede establecer si se usan iconos personalizados.'
    name: reverseIconOrder
    fullName: reverseIconOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'reverseIconOrder: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.IconSetConditionalFormat#showIconOnly:member'
    summary: 'Si es true, oculta los valores y solo muestra los iconos.'
    name: showIconOnly
    fullName: showIconOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showIconOnly: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.IconSetConditionalFormat#style:member'
    summary: 'Si se establece, muestra la opción IconSet del formato condicional.'
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: IconSet;'
      return:
        type:
          - 'excel!Excel.IconSet:enum'
        description: |-


          #### <a name="examples"></a>Ejemplos

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B8:E13");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              let iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          }
          ```
references:
  - uid: 'excel!Excel.IconSetConditionalFormat#criteria~0:complex'
    name: 'ConditionalIconCriterion[]'
    fullName: 'Excel.ConditionalIconCriterion[]'
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalIconCriterion:interface'
        name: ConditionalIconCriterion
        fullName: Excel.ConditionalIconCriterion
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.IconSet:enum'
    name: IconSet
    fullName: Excel.IconSet