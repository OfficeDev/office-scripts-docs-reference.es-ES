### YamlMime:TSType
name: Excel.PivotItemCollection
uid: excel!Excel.PivotItemCollection:interface
package: excel!
fullName: Excel.PivotItemCollection
summary: Representa una colección de todos los PivotItems relacionados con su campo dinámico primario.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getCount()
  uid: excel!Excel.PivotItemCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Obtiene el número de PivotItems de la colección.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(name)
  uid: excel!Excel.PivotItemCollection#getItem:member(1)
  package: excel!
  fullName: getItem(name)
  summary: Obtiene un PivotItem por su nombre o identificador.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(name: string): PivotItem;'
    parameters:
    - id: name
      description: Nombre del PivotItem que se va a recuperar.
      type: string
    return:
      type: <xref uid="excel!Excel.PivotItem:interface" />
      description: ''
- name: getItemOrNullObject(name)
  uid: excel!Excel.PivotItemCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(name)
  summary: Obtiene un PivotItem por nombre. Si el PivotItem no existe, se devolverá un objeto null.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(name: string): PivotItem;'
    parameters:
    - id: name
      description: Nombre del PivotItem que se va a recuperar.
      type: string
    return:
      type: <xref uid="excel!Excel.PivotItem:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.PivotItemCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 314813e1f7155dbae1b4b9f7421664e309910fe6
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418852"
