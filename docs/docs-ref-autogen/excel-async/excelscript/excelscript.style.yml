### YamlMime:TSType
name: Excel.Style
uid: excel!Excel.Style:interface
package: excel!
fullName: Excel.Style
summary: Un objeto que encapsula el formato de un estilo y otras propiedades.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: autoIndent
  uid: excel!Excel.Style#autoIndent:member
  package: excel!
  fullName: autoIndent
  summary: Especifica si se aplica sangría al texto automáticamente cuando la alineación del texto de una celda se establece en una distribución igualada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autoIndent: boolean;'
    return:
      type: boolean
- name: borders
  uid: excel!Excel.Style#borders:member
  package: excel!
  fullName: borders
  summary: Una colección de bordes de cuatro objetos Border que representan el estilo de los cuatro bordes.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly borders: RangeBorderCollection;'
    return:
      type: <xref uid="excel!Excel.RangeBorderCollection:interface" />
- name: builtIn
  uid: excel!Excel.Style#builtIn:member
  package: excel!
  fullName: builtIn
  summary: Especifica si el estilo es un estilo integrado.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly builtIn: boolean;'
    return:
      type: boolean
- name: fill
  uid: excel!Excel.Style#fill:member
  package: excel!
  fullName: fill
  summary: El relleno del estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly fill: RangeFill;'
    return:
      type: <xref uid="excel!Excel.RangeFill:interface" />
- name: font
  uid: excel!Excel.Style#font:member
  package: excel!
  fullName: font
  summary: Un objeto de fuente que representa la fuente del estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: RangeFont;'
    return:
      type: <xref uid="excel!Excel.RangeFont:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let style = context.workbook.styles.getItem(\"Normal\");\n    style.font.load(\"bold, color, italic, name, size\");\n    style.fill.load(\"color\");\n\n    await context.sync();\n\n    console.log(\"Bold: \" + style.font.bold);\n    console.log(\"Font color: \" + style.font.color);\n    console.log(\"Italic: \" + style.font.italic);\n    console.log(\"Name: \" + style.font.name);\n    console.log(\"Size: \" + style.font.size);\n    console.log(\"Fill color: \" + style.fill.color);\n}\n```"
- name: formulaHidden
  uid: excel!Excel.Style#formulaHidden:member
  package: excel!
  fullName: formulaHidden
  summary: Especifica si la fórmula se ocultará cuando la hoja de cálculo esté protegida.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulaHidden: boolean;'
    return:
      type: boolean
- name: horizontalAlignment
  uid: excel!Excel.Style#horizontalAlignment:member
  package: excel!
  fullName: horizontalAlignment
  summary: Representa la alineación horizontal del estilo. Consulte Excel. HorizontalAlignment para obtener más información.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      horizontalAlignment:
                  | HorizontalAlignment
                  | "General"
                  | "Left"
                  | "Center"
                  | "Right"
                  | "Fill"
                  | "Justify"
                  | "CenterAcrossSelection"
                  | "Distributed";
    return:
      type: >-
        | <xref uid="excel!Excel.HorizontalAlignment:enum" />
                    | "General"
                    | "Left"
                    | "Center"
                    | "Right"
                    | "Fill"
                    | "Justify"
                    | "CenterAcrossSelection"
                    | "Distributed"
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n}\n```"
- name: includeAlignment
  uid: excel!Excel.Style#includeAlignment:member
  package: excel!
  fullName: includeAlignment
  summary: Especifica si el estilo incluye las propiedades autodent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel y TextOrientation.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeAlignment: boolean;'
    return:
      type: boolean
- name: includeBorder
  uid: excel!Excel.Style#includeBorder:member
  package: excel!
  fullName: includeBorder
  summary: Especifica si el estilo incluye las propiedades color, ColorIndex, LineStyle y Weight Border.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeBorder: boolean;'
    return:
      type: boolean
- name: includeFont
  uid: excel!Excel.Style#includeFont:member
  package: excel!
  fullName: includeFont
  summary: Especifica si el estilo incluye las propiedades Background, Bold, color, ColorIndex, FontStyle, Italic, Name, size, StrikeThrough, subscript, Superscript y subrayado de la fuente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeFont: boolean;'
    return:
      type: boolean
- name: includeNumber
  uid: excel!Excel.Style#includeNumber:member
  package: excel!
  fullName: includeNumber
  summary: Especifica si el estilo incluye la propiedad NumberFormat.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeNumber: boolean;'
    return:
      type: boolean
- name: includePatterns
  uid: excel!Excel.Style#includePatterns:member
  package: excel!
  fullName: includePatterns
  summary: Especifica si el estilo incluye las propiedades interiores color, ColorIndex, InvertIfNegative, Pattern, PatternColor y PatternColorIndex.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includePatterns: boolean;'
    return:
      type: boolean
- name: includeProtection
  uid: excel!Excel.Style#includeProtection:member
  package: excel!
  fullName: includeProtection
  summary: Especifica si el estilo incluye las propiedades de protección FormulaHidden y locked.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeProtection: boolean;'
    return:
      type: boolean
- name: indentLevel
  uid: excel!Excel.Style#indentLevel:member
  package: excel!
  fullName: indentLevel
  summary: Un número entero entre 0 y 250 que indica el nivel de sangría para el estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'indentLevel: number;'
    return:
      type: number
- name: locked
  uid: excel!Excel.Style#locked:member
  package: excel!
  fullName: locked
  summary: Especifica si el objeto está bloqueado cuando la hoja de cálculo está protegida.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'locked: boolean;'
    return:
      type: boolean
- name: name
  uid: excel!Excel.Style#name:member
  package: excel!
  fullName: name
  summary: El nombre del estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: numberFormat
  uid: excel!Excel.Style#numberFormat:member
  package: excel!
  fullName: numberFormat
  summary: El código de formato del formato de número para el estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormat: string;'
    return:
      type: string
- name: numberFormatLocal
  uid: excel!Excel.Style#numberFormatLocal:member
  package: excel!
  fullName: numberFormatLocal
  summary: El código de formato localizado del formato de número para el estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormatLocal: string;'
    return:
      type: string
- name: readingOrder
  uid: excel!Excel.Style#readingOrder:member
  package: excel!
  fullName: readingOrder
  summary: El orden de lectura para el estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readingOrder: ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
    return:
      type: <xref uid="excel!Excel.ReadingOrder:enum" /> | "Context" | "LeftToRight" | "RightToLeft"
- name: shrinkToFit
  uid: excel!Excel.Style#shrinkToFit:member
  package: excel!
  fullName: shrinkToFit
  summary: Especifica si el texto se reduce automáticamente para ajustarse al ancho de columna disponible.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'shrinkToFit: boolean;'
    return:
      type: boolean
- name: textOrientation
  uid: excel!Excel.Style#textOrientation:member
  package: excel!
  fullName: textOrientation
  summary: Orientación del texto para el estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'textOrientation: number;'
    return:
      type: number
- name: verticalAlignment
  uid: excel!Excel.Style#verticalAlignment:member
  package: excel!
  fullName: verticalAlignment
  summary: Especifica la alineación vertical del estilo. Consulte Excel. VerticalAlignment para obtener más información.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      verticalAlignment:
                  | VerticalAlignment
                  | "Top"
                  | "Center"
                  | "Bottom"
                  | "Justify"
                  | "Distributed";
    return:
      type: >-
        | <xref uid="excel!Excel.VerticalAlignment:enum" />
                    | "Top"
                    | "Center"
                    | "Bottom"
                    | "Justify"
                    | "Distributed"
- name: wrapText
  uid: excel!Excel.Style#wrapText:member
  package: excel!
  fullName: wrapText
  summary: Especifica si Excel ajusta el texto del objeto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'wrapText: boolean;'
    return:
      type: boolean
methods:
- name: delete()
  uid: excel!Excel.Style#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Elimina este estilo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");\n\n    // Delete the diagonal orientation style from the style collection.\n    // Styles are in the Home tab ribbon.\n    style.delete();\n\n    await context.sync();\n\n    console.log(\"Successfully deleted the diagonal orientation style from the Home tab ribbon.\");\n}\n```"
- name: load(propertyNames)
  uid: excel!Excel.Style#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");            \n    style.load(\"textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked\");\n\n    await context.sync();\n\n    console.log(\"Orientation: \" + style.textOrientation);\n    console.log(\"Horizontal alignment: \" + style.horizontalAlignment);\n    console.log(\"Add indent: \" + style.autoIndent);\n    console.log(\"Reading order: \" + style.readingOrder);\n    console.log(\"Wrap text: \" + style.wrapText);\n    console.log(\"Include protection: \" + style.includeProtection);\n    console.log(\"Shrink to fit: \" + style.shrinkToFit);\n    console.log(\"Style locked: \" + style.locked);\n}\n```"
metadata:
  ms.openlocfilehash: 04ddac421a4a625bc93b269c38d4e4db176d89a4
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418306"
