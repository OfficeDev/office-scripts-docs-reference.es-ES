### YamlMime:TSType
name: Excel.PivotLayout
uid: excel!Excel.PivotLayout:interface
package: excel!
fullName: Excel.PivotLayout
summary: Representa el diseño visual de la tabla dinámica.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: autoFormat
  uid: excel!Excel.PivotLayout#autoFormat:member
  package: excel!
  fullName: autoFormat
  summary: Especifica si se aplica formato automáticamente al formato cuando se actualiza o cuando se mueven los campos.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autoFormat: boolean;'
    return:
      type: boolean
- name: enableFieldList
  uid: excel!Excel.PivotLayout#enableFieldList:member
  package: excel!
  fullName: enableFieldList
  summary: Especifica si se puede mostrar la lista de campos en la interfaz de usuario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'enableFieldList: boolean;'
    return:
      type: boolean
- name: layoutType
  uid: excel!Excel.PivotLayout#layoutType:member
  package: excel!
  fullName: layoutType
  summary: Esta propiedad indica el PivotLayoutType de todos los campos de la tabla dinámica. Si los campos tienen diferentes estados, será null.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'layoutType: PivotLayoutType | "Compact" | "Tabular" | "Outline";'
    return:
      type: <xref uid="excel!Excel.PivotLayoutType:enum" /> | "Compact" | "Tabular" | "Outline"
- name: preserveFormatting
  uid: excel!Excel.PivotLayout#preserveFormatting:member
  package: excel!
  fullName: preserveFormatting
  summary: Especifica si se conserva el formato cuando el informe se actualiza o se vuelve a calcular por operaciones como la dinamización, ordenación o cambio de elementos del campo de página.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'preserveFormatting: boolean;'
    return:
      type: boolean
- name: showColumnGrandTotals
  uid: excel!Excel.PivotLayout#showColumnGrandTotals:member
  package: excel!
  fullName: showColumnGrandTotals
  summary: Especifica si el informe de tabla dinámica muestra el total general de las columnas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showColumnGrandTotals: boolean;'
    return:
      type: boolean
- name: showRowGrandTotals
  uid: excel!Excel.PivotLayout#showRowGrandTotals:member
  package: excel!
  fullName: showRowGrandTotals
  summary: Especifica si el informe de tabla dinámica muestra el total general de las filas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showRowGrandTotals: boolean;'
    return:
      type: boolean
- name: subtotalLocation
  uid: excel!Excel.PivotLayout#subtotalLocation:member
  package: excel!
  fullName: subtotalLocation
  summary: Esta propiedad indica el SubtotalLocationType de todos los campos de la tabla dinámica. Si los campos tienen diferentes estados, será null.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'subtotalLocation: SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
    return:
      type: <xref uid="excel!Excel.SubtotalLocationType:enum" /> | "AtTop" | "AtBottom" | "Off"
methods:
- name: getColumnLabelRange()
  uid: excel!Excel.PivotLayout#getColumnLabelRange:member(1)
  package: excel!
  fullName: getColumnLabelRange()
  summary: Devuelve el intervalo donde residen las etiquetas de columna de la tabla dinámica.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnLabelRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getDataBodyRange()
  uid: excel!Excel.PivotLayout#getDataBodyRange:member(1)
  package: excel!
  fullName: getDataBodyRange()
  summary: Devuelve el intervalo donde residen los valores de datos de tabla dinámica.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataBodyRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // the layout controls the ranges used by the PivotTable\n    let range = pivotTable.layout.getDataBodyRange();\n\n    // get all the data hierarchy totals\n    let grandTotalRange = range.getLastRow();\n    grandTotalRange.load(\"address\");\n    await context.sync();\n    \n    // use the wholesale and farm sale totals to make a final sum\n    let masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange(\"B27:C27\");\n    masterTotalRange.formulas = [[\"All Crates\", \"=SUM(\" + grandTotalRange.address + \")\"]];\n    await context.sync();\n}\n```"
- name: getDataHierarchy(cell)
  uid: excel!Excel.PivotLayout#getDataHierarchy:member(1)
  package: excel!
  fullName: getDataHierarchy(cell)
  summary: Obtiene la DataHierarchy que se usa para calcular el valor de un intervalo especificado en la tabla dinámica.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataHierarchy(cell: Range | string): DataPivotHierarchy;'
    parameters:
    - id: cell
      description: Una sola celda del cuerpo de datos de la tabla dinámica.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.DataPivotHierarchy:interface" />
      description: ''
- name: getFilterAxisRange()
  uid: excel!Excel.PivotLayout#getFilterAxisRange:member(1)
  package: excel!
  fullName: getFilterAxisRange()
  summary: Devuelve el intervalo del área de filtro de la tabla dinámica.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFilterAxisRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getPivotItems(axis, cell)
  uid: excel!Excel.PivotLayout#getPivotItems:member(1)
  package: excel!
  fullName: getPivotItems(axis, cell)
  summary: Obtiene los elementos dinámicos de un eje que componen el valor de un intervalo especificado en la tabla dinámica.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getPivotItems(
                  axis: PivotAxis | "Unknown" | "Row" | "Column" | "Data" | "Filter",
                  cell: Range | string
              ): ClientResult<PivotItem[]>;
    parameters:
    - id: axis
      description: Eje del que se va a obtener el PivotItems. Debe ser "fila" o "columna".
      type: <xref uid="excel!Excel.PivotAxis:enum" /> | "Unknown" | "Row" | "Column" | "Data" | "Filter"
    - id: cell
      description: Una sola celda del cuerpo de datos de la tabla dinámica.
      type: "<xref uid=\"excel!Excel.Range:interface\" /> | string\n        "
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;<xref uid="excel!Excel.PivotItem:interface" />[]&gt;
      description: ''
- name: getRange()
  uid: excel!Excel.PivotLayout#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: Devuelve el intervalo en el que existe la tabla dinámica, excluyendo el área de filtro.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRowLabelRange()
  uid: excel!Excel.PivotLayout#getRowLabelRange:member(1)
  package: excel!
  fullName: getRowLabelRange()
  summary: Devuelve el intervalo donde residen las etiquetas de fila de la tabla dinámica.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowLabelRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.PivotLayout#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
- name: setAutoSortOnCell(cell, sortBy)
  uid: excel!Excel.PivotLayout#setAutoSortOnCell:member(1)
  package: excel!
  fullName: setAutoSortOnCell(cell, sortBy)
  summary: Establece la tabla dinámica para la ordenación automática mediante la celda especificada para seleccionar automáticamente el contexto y todos los criterios necesarios. Esto funciona igual que aplicar un Autoordenar desde la interfaz de usuario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      setAutoSortOnCell(
                  cell: Range | string,
                  sortBy: SortBy | "Ascending" | "Descending"
              ): void;
    parameters:
    - id: cell
      description: Una sola celda que se utiliza para obtener los criterios de para aplicar la ordenación.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    - id: sortBy
      description: Dirección de la ordenación.
      type: "<xref uid=\"excel!Excel.SortBy:enum\" /> | \"Ascending\" | \"Descending\"\n        "
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: aa0eb682e5bc0691bb35f865194a501a8642645a
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49413324"
