### YamlMime:TSType
name: Excel.Slicer
uid: excel!Excel.Slicer:interface
package: excel!
fullName: Excel.Slicer
summary: Representa un objeto Slicer en el libro.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: caption
  uid: excel!Excel.Slicer#caption:member
  package: excel!
  fullName: caption
  summary: Indica el título de la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'caption: string;'
    return:
      type: string
- name: height
  uid: excel!Excel.Slicer#height:member
  package: excel!
  fullName: height
  summary: Indica el alto, en puntos, de la segmentación. Produce una "el argumento no es válido o falta o tiene un formato incorrecto". excepción cuando se establece con valor negativo o cero como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'height: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Slicer#id:member
  package: excel!
  fullName: id
  summary: Indica el Id. único de la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: isFilterCleared
  uid: excel!Excel.Slicer#isFilterCleared:member
  package: excel!
  fullName: isFilterCleared
  summary: Verdadero si se borran todos los filtros aplicados actualmente en la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isFilterCleared: boolean;'
    return:
      type: boolean
- name: left
  uid: excel!Excel.Slicer#left:member
  package: excel!
  fullName: left
  summary: La distancia, en puntos, desde el lado izquierdo de la segmentación hasta el izquierdo de la hoja de cálculo. Produce una "el argumento no es válido o falta o tiene un formato incorrecto". excepción cuando se establece con valor negativo como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: name
  uid: excel!Excel.Slicer#name:member
  package: excel!
  fullName: name
  summary: Indica el nombre de la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: slicerItems
  uid: excel!Excel.Slicer#slicerItems:member
  package: excel!
  fullName: slicerItems
  summary: Indica la colección de SlicerItems que forman parte de la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicerItems: SlicerItemCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerItemCollection:interface" />
- name: sortBy
  uid: excel!Excel.Slicer#sortBy:member
  package: excel!
  fullName: sortBy
  summary: 'Indica el orden de los elementos de la segmentación. Los valores posibles son: "DataSourceOrder", "Ascending", "Descending".'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sortBy: SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
    return:
      type: <xref uid="excel!Excel.SlicerSortType:enum" /> | "DataSourceOrder" | "Ascending" | "Descending"
- name: style
  uid: excel!Excel.Slicer#style:member
  package: excel!
  fullName: style
  summary: 'Valor constante que representa el estilo de segmentación. Los valores posibles son: "SlicerStyleLight1" a "SlicerStyleLight6", "TableStyleOther1" a "TableStyleOther2", "SlicerStyleDark1" a "SlicerStyleDark6". También puede especificarse un estilo personalizado definido por el usuario presente en el libro.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.style = \"SlicerStyleLight6\";\n    await context.sync();\n}\n```"
- name: top
  uid: excel!Excel.Slicer#top:member
  package: excel!
  fullName: top
  summary: La distancia, en puntos, desde el borde superior de la segmentación hasta la parte superior de la hoja de cálculo. Produce una "el argumento no es válido o falta o tiene un formato incorrecto". excepción cuando se establece con valor negativo como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: width
  uid: excel!Excel.Slicer#width:member
  package: excel!
  fullName: width
  summary: Indica el ancho, en puntos, de la segmentación. Produce una "el argumento no es válido o falta o tiene un formato incorrecto". excepción cuando se establece con valor negativo o cero como entrada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'width: number;'
    return:
      type: number
- name: worksheet
  uid: excel!Excel.Slicer#worksheet:member
  package: excel!
  fullName: worksheet
  summary: Indica la hoja de cálculo que contiene la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: clearFilters()
  uid: excel!Excel.Slicer#clearFilters:member(1)
  package: excel!
  fullName: clearFilters()
  summary: Borra todos los filtros aplicados actualmente en la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearFilters(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.clearFilters();\n    await context.sync();\n}\n```"
- name: delete()
  uid: excel!Excel.Slicer#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Elimina la segmentación.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    sheet.slicers.getItemAt(0).delete();\n    await context.sync();\n}\n```"
- name: getSelectedItems()
  uid: excel!Excel.Slicer#getSelectedItems:member(1)
  package: excel!
  fullName: getSelectedItems()
  summary: Devuelve una matriz de claves de los elementos seleccionados.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedItems(): ClientResult<string[]>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;string[]&gt;
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Slicer#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
- name: selectItems(items)
  uid: excel!Excel.Slicer#selectItems:member(1)
  package: excel!
  fullName: selectItems(items)
  summary: Selecciona los elementos del rebanador en función de sus claves. Se borran las selecciones anteriores. Todos los elementos se seleccionarán de forma predeterminada si la matriz está vacía.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'selectItems(items?: string[]): void;'
    parameters:
    - id: items
      description: Opcional. Los nombres de elemento de segmentación de elementos especificados que se van a seleccionar.
      type: string[]
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.selectItems([\"Lemon\", \"Lime\", \"Orange\"]);\n    await context.sync();\n}\n```"
metadata:
  ms.openlocfilehash: 40b0e71f29db5f4c18ea35ab8b63508e16a64199
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418418"
