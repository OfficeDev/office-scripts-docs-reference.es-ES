### YamlMime:TSType
name: Excel.CommentReply
uid: excel!Excel.CommentReply:interface
package: excel!
fullName: Excel.CommentReply
summary: Representa una respuesta de comentario en el libro.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: authorEmail
  uid: excel!Excel.CommentReply#authorEmail:member
  package: excel!
  fullName: authorEmail
  summary: Obtiene el correo electrónico del autor de la respuesta del comentario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorEmail: string;'
    return:
      type: string
- name: authorName
  uid: excel!Excel.CommentReply#authorName:member
  package: excel!
  fullName: authorName
  summary: Obtiene el nombre del autor de la respuesta del comentario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorName: string;'
    return:
      type: string
- name: content
  uid: excel!Excel.CommentReply#content:member
  package: excel!
  fullName: content
  summary: Contenido de la respuesta del comentario. La cadena es texto sin formato.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'content: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Comments\");\n    let comment = sheet.comments.getItemAt(0);\n    let reply = comment.replies.getItemAt(0);\n    reply.load(\"content\");\n    // Sync to load the content of the comment reply.\n    await context.sync();\n\n    // Append \"Please!\" to the end of the comment reply.\n    reply.content += \" Please!\";\n    await context.sync();\n}\n```"
- name: creationDate
  uid: excel!Excel.CommentReply#creationDate:member
  package: excel!
  fullName: creationDate
  summary: Obtiene la hora de creación de la respuesta del comentario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly creationDate: Date;'
    return:
      type: Date
- name: id
  uid: excel!Excel.CommentReply#id:member
  package: excel!
  fullName: id
  summary: Especifica el identificador de respuesta de comentario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: mentions
  uid: excel!Excel.CommentReply#mentions:member
  package: excel!
  fullName: mentions
  summary: Las entidades (por ejemplo, personas) que se mencionan en los comentarios.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly mentions: CommentMention[];'
    return:
      type: <xref uid="excel!Excel.CommentMention:interface" />[]
- name: resolved
  uid: excel!Excel.CommentReply#resolved:member
  package: excel!
  fullName: resolved
  summary: El estado de la respuesta del comentario. Un valor de "true" significa que la respuesta está en estado resuelto.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly resolved: boolean;'
    return:
      type: boolean
- name: richContent
  uid: excel!Excel.CommentReply#richContent:member
  package: excel!
  fullName: richContent
  summary: Contenido de comentario enriquecido (por ejemplo, menciones en comentarios). Esta cadena no está pensada para mostrarse a los usuarios finales. El complemento solo debe usarlo para analizar el contenido de comentarios enriquecidos.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly richContent: string;'
    return:
      type: string
methods:
- name: delete()
  uid: excel!Excel.CommentReply#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Elimina la respuesta del comentario.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Ejemplos\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    // Remove the first comment reply from this worksheet's first comment.\n    let sheet = context.workbook.worksheets.getItem(\"Comments\");\n    let comment = sheet.comments.getItemAt(0);\n    comment.replies.getItemAt(0).delete();\n    await context.sync();\n}\n```"
- name: getLocation()
  uid: excel!Excel.CommentReply#getLocation:member(1)
  package: excel!
  fullName: getLocation()
  summary: Obtiene la celda en la que se encuentra este comentario de respuesta.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocation(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getParentComment()
  uid: excel!Excel.CommentReply#getParentComment:member(1)
  package: excel!
  fullName: getParentComment()
  summary: Obtiene el comentario primario de esta respuesta.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getParentComment(): Comment;'
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CommentReply#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Pone en cola un comando para cargar las propiedades especificadas del objeto. Debe llamar a `context.sync()` antes de leer las propiedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Una cadena delimitada por comas o una matriz de cadenas que especifican las propiedades que se van a cargar.
      type: string | string[]
    return:
      type: void
      description: ''
- name: updateMentions(contentWithMentions)
  uid: excel!Excel.CommentReply#updateMentions:member(1)
  package: excel!
  fullName: updateMentions(contentWithMentions)
  summary: Actualiza el contenido del comentario con una cadena con formato especial y una lista de menciones.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'updateMentions(contentWithMentions: CommentRichContent): void;'
    parameters:
    - id: contentWithMentions
      description: El contenido del comentario. Contiene una cadena con un formato especial y una lista de menciones que se analizará en la cadena cuando la muestre Excel.
      type: <xref uid="excel!Excel.CommentRichContent:interface" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: bf48e6926ecd58e7f38fb938eb6eedf511618c1f
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414736"
